local a,b,c,d=(function(e)local f={[{}]=true}local g;local h={}local require;local i={}g=function(j,k)if not h[j]then h[j]=k end end;require=function(j)local l=i[j]if l then if l==f then return nil end else if not h[j]then if not e then local m=type(j)=='string'and'\"'..j..'\"'or tostring(j)error('Tried to require '..m..', but no such module has been registered')else return e(j)end end;i[j]=f;l=h[j](require,i,g,h)i[j]=l end;return l end;return require,i,g,h end)(require)c("__root",function(require,n,c,d)function plugindef()finaleplugin.RequireSelection=true;finaleplugin.Author="Carl Vine"finaleplugin.AuthorURL="http://carlvine.com"finaleplugin.Copyright="CC0 https://creativecommons.org/publicdomain/zero/1.0/"finaleplugin.Version="v1.47"finaleplugin.Date="2022/05/16"finaleplugin.Notes=[[
        This script explodes a set of chords from one staff into "split" pairs of notes, 
        top to bottom, on subsequent staves (1-3/2-4; 1-4/2-5/3-6; etc). 
        Chords may contain different numbers of notes, the number of pairs determined by the chord with the largest number of notes.
        It warns if pre-existing music will be erased and duplicates all markings from the original, resetting the current clef for each destination staff.

        This script allows for the following configuration:

        ```
        fix_note_spacing = true -- to respace music automatically when the script finishes
        ```
    ]]return"Staff Explode Split Pairs","Staff Explode Split Pairs","Staff Explode as pairs of notes onto consecutive single staves"end;local o=require("library.configuration")local p=require("library.clef")local q={fix_note_spacing=true}o.get_parameters("staff_explode_split_pairs.config.txt",q)function show_error(r)local s={need_more_staves="There are not enough empty\nstaves to explode onto",only_one_staff="Please select only one source staff!",empty_region="Please select a region\nwith some notes in it!",three_or_more="Explode Pairs needs\nthree or more notes per chord"}finenv.UI():AlertNeutral("script: "..plugindef(),s[r])return-1 end;function should_overwrite_existing_music()local t=finenv.UI():AlertOkCancel("script: "..plugindef(),"Overwrite existing music?")local u=t==0;return u end;function get_note_count(v)local w=0;for x in eachentry(v)do if x.Count>0 then if w<x.Count then w=x.Count end end end;if w==0 then return show_error("empty_region")elseif w<3 then return show_error("three_or_more")end;return w end;function ensure_score_has_enough_staves(y,w)local z=finale.FCStaves()z:LoadAll()if w>z.Count-y+1 then return false end;return true end;function staff_explode()local v=finale.FCMusicRegion()v:SetCurrentSelection()if v:CalcStaffSpan()>1 then return show_error("only_one_staff")end;local A=v.StartSlot;local B=v.StartMeasure;local C=v.EndMeasure;local D={}D[1]=v;local w=get_note_count(v)if w<=0 then return end;local E=math.floor(w/2+0.5)if not ensure_score_has_enough_staves(A,E)then show_error("need_more_staves")return end;local F=true;for y=2,E do D[y]=finale.FCMusicRegion()D[y]:SetRegion(D[1])D[y]:CopyMusic()local G=A+y-1;D[y].StartSlot=G;D[y].EndSlot=G;if F then for x in eachentry(D[y])do if x.Count>0 then F=false;break end end end end;if F or should_overwrite_existing_music()then local H={}local I=1;for x in eachentry(D[1])do if x:IsNote()then H[I]={}for J in each(x)do table.insert(H[I],J:CalcMIDIKey())end;I=I+1 end end;for y=1,E do if y>1 then D[y]:PasteMusic()p.restore_default_clef(B,C,D[y].StartStaff)end;I=1;for x in eachentrysaved(D[y])do if x:IsNote()then local K=x.Count+1-y;local L=K-E;local M=-1;while x.Count>0 and M<w do M=M+1;for J in each(x)do local N=J:CalcMIDIKey()if N~=H[I][K]and N~=H[I][L]then x:DeleteNote(J)break end end end;I=I+1 end end end;if q.fix_note_spacing then D[1]:SetFullMeasureStack()D[1]:SetInDocument()finenv.UI():MenuCommand(finale.MENUCMD_NOTESPACING)D[1].StartSlot=A;D[1].EndSlot=A;D[1]:SetInDocument()end end;for y=2,E do D[y]:ReleaseMusic()end;finenv:Region():SetInDocument()end;staff_explode()end)c("library.clef",function(require,n,c,d)local O={}function O.finale_version(P,Q,R)local S=bit32.bor(bit32.lshift(math.floor(P),24),bit32.lshift(math.floor(Q),20))if R then S=bit32.bor(S,math.floor(R))end;return S end;function O.group_overlaps_region(T,U)if U:IsFullDocumentSpan()then return true end;local V=false;local W=finale.FCSystemStaves()W:LoadAllForRegion(U)for X in each(W)do if T:ContainsStaff(X:GetStaff())then V=true;break end end;if not V then return false end;if T.StartMeasure>U.EndMeasure or T.EndMeasure<U.StartMeasure then return false end;return true end;function O.group_is_contained_in_region(T,U)if not U:IsStaffIncluded(T.StartStaff)then return false end;if not U:IsStaffIncluded(T.EndStaff)then return false end;return true end;function O.staff_group_is_multistaff_instrument(T)local Y=finale.FCMultiStaffInstruments()Y:LoadAll()for Z in each(Y)do if Z:ContainsStaff(T.StartStaff)and Z.GroupID==T:GetItemID()then return true end end;return false end;function O.get_selected_region_or_whole_doc()local _=finenv.Region()if _:IsEmpty()then _:SetFullDocument()end;return _ end;function O.get_first_cell_on_or_after_page(a0)local a1=a0;local a2=finale.FCPage()local a3=false;while a2:Load(a1)do if a2:GetFirstSystem()>0 then a3=true;break end;a1=a1+1 end;if a3 then local a4=finale.FCStaffSystem()a4:Load(a2:GetFirstSystem())return finale.FCCell(a4.FirstMeasure,a4.TopStaff)end;local a5=finale.FCMusicRegion()a5:SetFullDocument()return finale.FCCell(a5.EndMeasure,a5.EndStaff)end;function O.get_top_left_visible_cell()if not finenv.UI():IsPageView()then local a6=finale.FCMusicRegion()a6:SetFullDocument()return finale.FCCell(finenv.UI():GetCurrentMeasure(),a6.StartStaff)end;return O.get_first_cell_on_or_after_page(finenv.UI():GetCurrentPage())end;function O.get_top_left_selected_or_visible_cell()local _=finenv.Region()if not _:IsEmpty()then return finale.FCCell(_.StartMeasure,_.StartStaff)end;return O.get_top_left_visible_cell()end;function O.is_default_measure_number_visible_on_cell(a7,a8,a9,aa)local ab=finale.FCCurrentStaffSpec()if not ab:LoadForCell(a8,0)then return false end;if a7:GetShowOnTopStaff()and a8.Staff==a9.TopStaff then return true end;if a7:GetShowOnBottomStaff()and a8.Staff==a9:CalcBottomStaff()then return true end;if ab.ShowMeasureNumbers then return not a7:GetExcludeOtherStaves(aa)end;return false end;function O.is_default_number_visible_and_left_aligned(a7,a8,ac,aa,ad)if a7.UseScoreInfoForParts then aa=false end;if ad and a7:GetShowOnMultiMeasureRests(aa)then if finale.MNALIGN_LEFT~=a7:GetMultiMeasureAlignment(aa)then return false end elseif a8.Measure==ac.FirstMeasure then if not a7:GetShowOnSystemStart()then return false end;if finale.MNALIGN_LEFT~=a7:GetStartAlignment(aa)then return false end else if not a7:GetShowMultiples(aa)then return false end;if finale.MNALIGN_LEFT~=a7:GetMultipleAlignment(aa)then return false end end;return O.is_default_measure_number_visible_on_cell(a7,a8,ac,aa)end;function O.update_layout(ae,af)ae=ae or 1;af=af or false;local ag=finale.FCPage()if ag:Load(ae)then ag:UpdateLayout(af)end end;function O.get_current_part()local ah=finale.FCParts()ah:LoadAll()return ah:GetCurrent()end;function O.get_page_format_prefs()local ai=O.get_current_part()local aj=finale.FCPageFormatPrefs()local ak=false;if ai:IsScore()then ak=aj:LoadScore()else ak=aj:LoadParts()end;return aj,ak end;function O.get_smufl_metadata_file(al)if not al then al=finale.FCFontInfo()al:LoadFontPrefs(finale.FONTPREF_MUSIC)end;local am=function(an,al)local ao=an.."/SMuFL/Fonts/"..al.Name.."/"..al.Name..".json"return io.open(ao,"r")end;local ap=""if finenv.UI():IsOnWindows()then ap=os.getenv("LOCALAPPDATA")else ap=os.getenv("HOME").."/Library/Application Support"end;local aq=am(ap,al)if nil~=aq then return aq end;local ar="/Library/Application Support"if finenv.UI():IsOnWindows()then ar=os.getenv("COMMONPROGRAMFILES")end;return am(ar,al)end;function O.is_font_smufl_font(al)if not al then al=finale.FCFontInfo()al:LoadFontPrefs(finale.FONTPREF_MUSIC)end;if finenv.RawFinaleVersion>=O.finale_version(27,1)then if nil~=al.IsSMuFLFont then return al.IsSMuFLFont end end;local as=O.get_smufl_metadata_file(al)if nil~=as then io.close(as)return true end;return false end;function O.simple_input(at,au)local av=finale.FCString()av.LuaString=""local aw=finale.FCString()local ax=160;function format_ctrl(ay,az,aA,aB)ay:SetHeight(az)ay:SetWidth(aA)aw.LuaString=aB;ay:SetText(aw)end;title_width=string.len(at)*6+54;if title_width>ax then ax=title_width end;text_width=string.len(au)*6;if text_width>ax then ax=text_width end;aw.LuaString=at;local aC=finale.FCCustomLuaWindow()aC:SetTitle(aw)local aD=aC:CreateStatic(0,0)format_ctrl(aD,16,ax,au)local aE=aC:CreateEdit(0,20)format_ctrl(aE,20,ax,"")aC:CreateOkButton()aC:CreateCancelButton()function callback(ay)end;aC:RegisterHandleCommand(callback)if aC:ExecuteModal(nil)==finale.EXECMODAL_OK then av.LuaString=aE:GetText(av)return av.LuaString end end;function O.is_finale_object(aF)return aF and type(aF)=="userdata"and aF.ClassName and aF.GetClassID and true or false end;function O.system_indent_set_to_prefs(ac,aj)aj=aj or O.get_page_format_prefs()local aG=finale.FCMeasure()local aH=ac.FirstMeasure==1;if not aH and aG:Load(ac.FirstMeasure)then if aG.ShowFullNames then aH=true end end;if aH and aj.UseFirstSystemMargins then ac.LeftMargin=aj.FirstSystemLeft else ac.LeftMargin=aj.SystemLeft end;return ac:Save()end;return O end)c("library.configuration",function(require,n,c,d)local O={}function O.finale_version(P,Q,R)local S=bit32.bor(bit32.lshift(math.floor(P),24),bit32.lshift(math.floor(Q),20))if R then S=bit32.bor(S,math.floor(R))end;return S end;function O.group_overlaps_region(T,U)if U:IsFullDocumentSpan()then return true end;local V=false;local W=finale.FCSystemStaves()W:LoadAllForRegion(U)for X in each(W)do if T:ContainsStaff(X:GetStaff())then V=true;break end end;if not V then return false end;if T.StartMeasure>U.EndMeasure or T.EndMeasure<U.StartMeasure then return false end;return true end;function O.group_is_contained_in_region(T,U)if not U:IsStaffIncluded(T.StartStaff)then return false end;if not U:IsStaffIncluded(T.EndStaff)then return false end;return true end;function O.staff_group_is_multistaff_instrument(T)local Y=finale.FCMultiStaffInstruments()Y:LoadAll()for Z in each(Y)do if Z:ContainsStaff(T.StartStaff)and Z.GroupID==T:GetItemID()then return true end end;return false end;function O.get_selected_region_or_whole_doc()local _=finenv.Region()if _:IsEmpty()then _:SetFullDocument()end;return _ end;function O.get_first_cell_on_or_after_page(a0)local a1=a0;local a2=finale.FCPage()local a3=false;while a2:Load(a1)do if a2:GetFirstSystem()>0 then a3=true;break end;a1=a1+1 end;if a3 then local a4=finale.FCStaffSystem()a4:Load(a2:GetFirstSystem())return finale.FCCell(a4.FirstMeasure,a4.TopStaff)end;local a5=finale.FCMusicRegion()a5:SetFullDocument()return finale.FCCell(a5.EndMeasure,a5.EndStaff)end;function O.get_top_left_visible_cell()if not finenv.UI():IsPageView()then local a6=finale.FCMusicRegion()a6:SetFullDocument()return finale.FCCell(finenv.UI():GetCurrentMeasure(),a6.StartStaff)end;return O.get_first_cell_on_or_after_page(finenv.UI():GetCurrentPage())end;function O.get_top_left_selected_or_visible_cell()local _=finenv.Region()if not _:IsEmpty()then return finale.FCCell(_.StartMeasure,_.StartStaff)end;return O.get_top_left_visible_cell()end;function O.is_default_measure_number_visible_on_cell(a7,a8,a9,aa)local ab=finale.FCCurrentStaffSpec()if not ab:LoadForCell(a8,0)then return false end;if a7:GetShowOnTopStaff()and a8.Staff==a9.TopStaff then return true end;if a7:GetShowOnBottomStaff()and a8.Staff==a9:CalcBottomStaff()then return true end;if ab.ShowMeasureNumbers then return not a7:GetExcludeOtherStaves(aa)end;return false end;function O.is_default_number_visible_and_left_aligned(a7,a8,ac,aa,ad)if a7.UseScoreInfoForParts then aa=false end;if ad and a7:GetShowOnMultiMeasureRests(aa)then if finale.MNALIGN_LEFT~=a7:GetMultiMeasureAlignment(aa)then return false end elseif a8.Measure==ac.FirstMeasure then if not a7:GetShowOnSystemStart()then return false end;if finale.MNALIGN_LEFT~=a7:GetStartAlignment(aa)then return false end else if not a7:GetShowMultiples(aa)then return false end;if finale.MNALIGN_LEFT~=a7:GetMultipleAlignment(aa)then return false end end;return O.is_default_measure_number_visible_on_cell(a7,a8,ac,aa)end;function O.update_layout(ae,af)ae=ae or 1;af=af or false;local ag=finale.FCPage()if ag:Load(ae)then ag:UpdateLayout(af)end end;function O.get_current_part()local ah=finale.FCParts()ah:LoadAll()return ah:GetCurrent()end;function O.get_page_format_prefs()local ai=O.get_current_part()local aj=finale.FCPageFormatPrefs()local ak=false;if ai:IsScore()then ak=aj:LoadScore()else ak=aj:LoadParts()end;return aj,ak end;function O.get_smufl_metadata_file(al)if not al then al=finale.FCFontInfo()al:LoadFontPrefs(finale.FONTPREF_MUSIC)end;local am=function(an,al)local ao=an.."/SMuFL/Fonts/"..al.Name.."/"..al.Name..".json"return io.open(ao,"r")end;local ap=""if finenv.UI():IsOnWindows()then ap=os.getenv("LOCALAPPDATA")else ap=os.getenv("HOME").."/Library/Application Support"end;local aq=am(ap,al)if nil~=aq then return aq end;local ar="/Library/Application Support"if finenv.UI():IsOnWindows()then ar=os.getenv("COMMONPROGRAMFILES")end;return am(ar,al)end;function O.is_font_smufl_font(al)if not al then al=finale.FCFontInfo()al:LoadFontPrefs(finale.FONTPREF_MUSIC)end;if finenv.RawFinaleVersion>=O.finale_version(27,1)then if nil~=al.IsSMuFLFont then return al.IsSMuFLFont end end;local as=O.get_smufl_metadata_file(al)if nil~=as then io.close(as)return true end;return false end;function O.simple_input(at,au)local av=finale.FCString()av.LuaString=""local aw=finale.FCString()local ax=160;function format_ctrl(ay,az,aA,aB)ay:SetHeight(az)ay:SetWidth(aA)aw.LuaString=aB;ay:SetText(aw)end;title_width=string.len(at)*6+54;if title_width>ax then ax=title_width end;text_width=string.len(au)*6;if text_width>ax then ax=text_width end;aw.LuaString=at;local aC=finale.FCCustomLuaWindow()aC:SetTitle(aw)local aD=aC:CreateStatic(0,0)format_ctrl(aD,16,ax,au)local aE=aC:CreateEdit(0,20)format_ctrl(aE,20,ax,"")aC:CreateOkButton()aC:CreateCancelButton()function callback(ay)end;aC:RegisterHandleCommand(callback)if aC:ExecuteModal(nil)==finale.EXECMODAL_OK then av.LuaString=aE:GetText(av)return av.LuaString end end;function O.is_finale_object(aF)return aF and type(aF)=="userdata"and aF.ClassName and aF.GetClassID and true or false end;function O.system_indent_set_to_prefs(ac,aj)aj=aj or O.get_page_format_prefs()local aG=finale.FCMeasure()local aH=ac.FirstMeasure==1;if not aH and aG:Load(ac.FirstMeasure)then if aG.ShowFullNames then aH=true end end;if aH and aj.UseFirstSystemMargins then ac.LeftMargin=aj.FirstSystemLeft else ac.LeftMargin=aj.SystemLeft end;return ac:Save()end;return O end)return a("__root")