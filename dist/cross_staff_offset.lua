local a,b,c,d=(function(e)local f={[{}]=true}local g;local h={}local require;local i={}g=function(j,k)if not h[j]then h[j]=k end end;require=function(j)local l=i[j]if l then if l==f then return nil end else if not h[j]then if not e then local m=type(j)=='string'and'\"'..j..'\"'or tostring(j)error('Tried to require '..m..', but no such module has been registered')else return e(j)end end;i[j]=f;l=h[j](require,i,g,h)i[j]=l end;return l end;return require,i,g,h end)(require)c("__root",function(require,n,c,d)function plugindef()finaleplugin.RequireSelection=true;finaleplugin.HandlesUndo=true;finaleplugin.Copyright="CC0 https://creativecommons.org/publicdomain/zero/1.0/"finaleplugin.Author="Carl Vine"finaleplugin.AuthorURL="http://carlvine.com/lua/"finaleplugin.Version="v1.29"finaleplugin.Date="2022/07/11"finaleplugin.MinJWLuaVersion=0.62;finaleplugin.AdditionalMenuOptions=[[  CrossStaff Offset No Dialog  ]]finaleplugin.AdditionalUndoText=[[     CrossStaff Offset No Dialog  ]]finaleplugin.AdditionalPrefixes=[[     no_user_dialog = true  ]]finaleplugin.AdditionalDescriptions=[[ Offset horizontal position of cross-staff note entries - NO DIALOG ]]finaleplugin.Notes=[[
        When creating cross-staff notes using the option-downarrow shortcut, the stems of 
        'crossed' notes are reversed (on the wrong side of the notehead) and appear too far 
        to the right (if shifting downwards) by the width of one notehead, typically 24EVPU. 
        This script lets you set a horizontal offset for all cross-staff notes in the 
        selected region, with a different offset for non-crossed notes.  
        For crossing to the staff below use (-24,0) or (-12,12).  
        For crossing to the staff above use (24,0) or (12,-12).  
        Also specify which layer number to act upon (1-4) or "all layers" (0). 
        (This also offers a simple way to reset the horizontal offset of all notes in the selection to zero).
    
        This script adds an extra `NO DIALOG` menu item to rapidly duplicate the last action
        without using a confirmation dialog.
]]return"CrossStaff Offsetâ€¦","CrossStaff Offset","Offset horizontal position of cross-staff note entries"end;no_user_dialog=no_user_dialog or false;global_dialog=nil;global_dialog_options={{"Cross-staff offset:","cross_staff_offset",nil},{"Non-crossed offset:","non_cross_offset",nil},{"Layer 1-4 (0 = all):","layer_number",nil}}config={cross_staff_offset=0,non_cross_offset=0,layer_number=0,window_pos_x=700,window_pos_y=200}local o=require("library.configuration")function is_out_of_range(p)return math.abs(p)>999 end;function no_submission_errors()local error=""if config.layer_number<0 or config.layer_number>4 then error="The layer number must\nbe between 0 and 4\n(not "..config.layer_number..")"elseif is_out_of_range(config.cross_staff_offset)or is_out_of_range(config.non_cross_offset)then error="Choose realistic offset\nvalues (say from -999 to 999)\n(not "..config.cross_staff_offset.." / "..config.non_cross_offset..")"end;if error~=""then finenv.UI():AlertNeutral("script: "..plugindef(),error)return false end;return true end;function create_user_dialog()local q=10;local r=25;local s=finenv.UI():IsOnMac()and 3 or 0;local t=120;local u=finale.FCCustomLuaWindow()local v=finale.FCString()v.LuaString=plugindef()u:SetTitle(v)function make_static(w,x,y,z,A)local B=u:CreateStatic(x,y)v.LuaString=w;B:SetText(v)B:SetWidth(z)if A=="red"then B:SetTextColor(204,51,0)end end;for C,D in ipairs(global_dialog_options)do make_static(D[1],0,q,t,"")D[3]=u:CreateEdit(t,q-s)D[3]:SetInteger(config[D[2]])D[3]:SetWidth(75)if C<3 then make_static("EVPUs",t+80,q,75,"")end;q=q+r end;make_static("cross to staff below = [ -24, 0 ] or [ -12, 12 ]",0,q+8,290,"red")make_static("cross to staff above = [ 24, 0 ] or [ 12, -12 ]",0,q+r,290,"red")u:CreateOkButton()u:CreateCancelButton()return u end;function change_the_offsets()finenv.StartNewUndoBlock("CrossStaff Offset",false)for E in eachentrysaved(finenv.Region(),config.layer_number)do if E:IsNote()then E.ManualPosition=E.CrossStaff and config.cross_staff_offset or config.non_cross_offset end end;if finenv.EndUndoBlock then finenv.EndUndoBlock(true)finenv.Region():Redraw()else finenv.StartNewUndoBlock("CrossStaff Offset",true)end end;function on_ok()for C,D in ipairs(global_dialog_options)do config[D[2]]=D[3]:GetInteger()end;if no_submission_errors()then change_the_offsets()end end;function on_close()global_dialog:StorePosition()config.window_pos_x=global_dialog.StoredX;config.window_pos_y=global_dialog.StoredY;o.save_user_settings("cross_staff_offset",config)end;function cross_staff_offset()o.get_user_settings("cross_staff_offset",config)if no_user_dialog then change_the_offsets()return end;global_dialog=create_user_dialog()if config.window_pos_x~=nil and config.window_pos_y~=nil then global_dialog:StorePosition()global_dialog:SetRestorePositionOnlyData(config.window_pos_x,config.window_pos_y)global_dialog:RestorePosition()end;global_dialog:RegisterHandleOkButtonPressed(on_ok)if global_dialog.RegisterCloseWindow then global_dialog:RegisterCloseWindow(on_close)end;finenv.RegisterModelessDialog(global_dialog)global_dialog:ShowModeless()end;cross_staff_offset()end)c("library.configuration",function(require,n,c,d)local F={}function F.finale_version(G,H,I)local J=bit32.bor(bit32.lshift(math.floor(G),24),bit32.lshift(math.floor(H),20))if I then J=bit32.bor(J,math.floor(I))end;return J end;function F.group_overlaps_region(K,L)if L:IsFullDocumentSpan()then return true end;local M=false;local N=finale.FCSystemStaves()N:LoadAllForRegion(L)for O in each(N)do if K:ContainsStaff(O:GetStaff())then M=true;break end end;if not M then return false end;if K.StartMeasure>L.EndMeasure or K.EndMeasure<L.StartMeasure then return false end;return true end;function F.group_is_contained_in_region(K,L)if not L:IsStaffIncluded(K.StartStaff)then return false end;if not L:IsStaffIncluded(K.EndStaff)then return false end;return true end;function F.staff_group_is_multistaff_instrument(K)local P=finale.FCMultiStaffInstruments()P:LoadAll()for Q in each(P)do if Q:ContainsStaff(K.StartStaff)and Q.GroupID==K:GetItemID()then return true end end;return false end;function F.get_selected_region_or_whole_doc()local R=finenv.Region()if R:IsEmpty()then R:SetFullDocument()end;return R end;function F.get_first_cell_on_or_after_page(S)local T=S;local U=finale.FCPage()local V=false;while U:Load(T)do if U:GetFirstSystem()>0 then V=true;break end;T=T+1 end;if V then local W=finale.FCStaffSystem()W:Load(U:GetFirstSystem())return finale.FCCell(W.FirstMeasure,W.TopStaff)end;local X=finale.FCMusicRegion()X:SetFullDocument()return finale.FCCell(X.EndMeasure,X.EndStaff)end;function F.get_top_left_visible_cell()if not finenv.UI():IsPageView()then local Y=finale.FCMusicRegion()Y:SetFullDocument()return finale.FCCell(finenv.UI():GetCurrentMeasure(),Y.StartStaff)end;return F.get_first_cell_on_or_after_page(finenv.UI():GetCurrentPage())end;function F.get_top_left_selected_or_visible_cell()local R=finenv.Region()if not R:IsEmpty()then return finale.FCCell(R.StartMeasure,R.StartStaff)end;return F.get_top_left_visible_cell()end;function F.is_default_measure_number_visible_on_cell(Z,_,a0,a1)local a2=finale.FCCurrentStaffSpec()if not a2:LoadForCell(_,0)then return false end;if Z:GetShowOnTopStaff()and _.Staff==a0.TopStaff then return true end;if Z:GetShowOnBottomStaff()and _.Staff==a0:CalcBottomStaff()then return true end;if a2.ShowMeasureNumbers then return not Z:GetExcludeOtherStaves(a1)end;return false end;function F.is_default_number_visible_and_left_aligned(Z,_,a3,a1,a4)if Z.UseScoreInfoForParts then a1=false end;if a4 and Z:GetShowOnMultiMeasureRests(a1)then if finale.MNALIGN_LEFT~=Z:GetMultiMeasureAlignment(a1)then return false end elseif _.Measure==a3.FirstMeasure then if not Z:GetShowOnSystemStart()then return false end;if finale.MNALIGN_LEFT~=Z:GetStartAlignment(a1)then return false end else if not Z:GetShowMultiples(a1)then return false end;if finale.MNALIGN_LEFT~=Z:GetMultipleAlignment(a1)then return false end end;return F.is_default_measure_number_visible_on_cell(Z,_,a3,a1)end;function F.update_layout(a5,a6)a5=a5 or 1;a6=a6 or false;local a7=finale.FCPage()if a7:Load(a5)then a7:UpdateLayout(a6)end end;function F.get_current_part()local a8=finale.FCParts()a8:LoadAll()return a8:GetCurrent()end;function F.get_page_format_prefs()local a9=F.get_current_part()local aa=finale.FCPageFormatPrefs()local ab=false;if a9:IsScore()then ab=aa:LoadScore()else ab=aa:LoadParts()end;return aa,ab end;local ac=function(ad)local ae=finenv.UI():IsOnWindows()local af=function(ag,ah)if finenv.UI():IsOnWindows()then return ag and os.getenv(ag)or""else return ah and os.getenv(ah)or""end end;local ai=ad and af("LOCALAPPDATA","HOME")or af("COMMONPROGRAMFILES")if not ae then ai=ai.."/Library/Application Support"end;ai=ai.."/SMuFL/Fonts/"return ai end;function F.get_smufl_font_list()local aj={}local ak=function(ad)local ai=ac(ad)local al=function()if finenv.UI():IsOnWindows()then return io.popen('dir "'..ai..'" /b /ad')else return io.popen('ls "'..ai..'"')end end;local am=function(an)local ao=finale.FCString()ao.LuaString=an;return finenv.UI():IsFontAvailable(ao)end;for an in al():lines()do if not an:find("%.")then an=an:gsub(" Bold","")an=an:gsub(" Italic","")local ao=finale.FCString()ao.LuaString=an;if aj[an]or am(an)then aj[an]=ad and"user"or"system"end end end end;ak(true)ak(false)return aj end;function F.get_smufl_metadata_file(ap)if not ap then ap=finale.FCFontInfo()ap:LoadFontPrefs(finale.FONTPREF_MUSIC)end;local aq=function(ar,ap)local as=ar..ap.Name.."/"..ap.Name..".json"return io.open(as,"r")end;local at=aq(ac(true),ap)if at then return at end;return aq(ac(false),ap)end;function F.is_font_smufl_font(ap)if not ap then ap=finale.FCFontInfo()ap:LoadFontPrefs(finale.FONTPREF_MUSIC)end;if finenv.RawFinaleVersion>=F.finale_version(27,1)then if nil~=ap.IsSMuFLFont then return ap.IsSMuFLFont end end;local au=F.get_smufl_metadata_file(ap)if nil~=au then io.close(au)return true end;return false end;function F.simple_input(av,aw)local ax=finale.FCString()ax.LuaString=""local v=finale.FCString()local ay=160;function format_ctrl(az,aA,aB,aC)az:SetHeight(aA)az:SetWidth(aB)v.LuaString=aC;az:SetText(v)end;title_width=string.len(av)*6+54;if title_width>ay then ay=title_width end;text_width=string.len(aw)*6;if text_width>ay then ay=text_width end;v.LuaString=av;local u=finale.FCCustomLuaWindow()u:SetTitle(v)local aD=u:CreateStatic(0,0)format_ctrl(aD,16,ay,aw)local aE=u:CreateEdit(0,20)format_ctrl(aE,20,ay,"")u:CreateOkButton()u:CreateCancelButton()function callback(az)end;u:RegisterHandleCommand(callback)if u:ExecuteModal(nil)==finale.EXECMODAL_OK then ax.LuaString=aE:GetText(ax)return ax.LuaString end end;function F.is_finale_object(aF)return aF and type(aF)=="userdata"and aF.ClassName and aF.GetClassID and true or false end;function F.system_indent_set_to_prefs(a3,aa)aa=aa or F.get_page_format_prefs()local aG=finale.FCMeasure()local aH=a3.FirstMeasure==1;if not aH and aG:Load(a3.FirstMeasure)then if aG.ShowFullNames then aH=true end end;if aH and aa.UseFirstSystemMargins then a3.LeftMargin=aa.FirstSystemLeft else a3.LeftMargin=aa.SystemLeft end;return a3:Save()end;function F.calc_script_name(aI)local aJ=finale.FCString()if finenv.RunningLuaFilePath then aJ.LuaString=finenv.RunningLuaFilePath()else aJ:SetRunningLuaFilePath()end;local aK=finale.FCString()aJ:SplitToPathAndFile(nil,aK)local J=aK.LuaString;if not aI then J=J:match("(.+)%..+")if not J or J==""then J=aK.LuaString end end;return J end;return F end)return a("__root")