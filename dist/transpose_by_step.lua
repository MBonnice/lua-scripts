local a,b,c,d=(function(e)local f={[{}]=true}local g;local h={}local require;local i={}g=function(j,k)if not h[j]then h[j]=k end end;require=function(j)local l=i[j]if l then if l==f then return nil end else if not h[j]then if not e then local m=type(j)=='string'and'\"'..j..'\"'or tostring(j)error('Tried to require '..m..', but no such module has been registered')else return e(j)end end;i[j]=f;l=h[j](require,i,g,h)i[j]=l end;return l end;return require,i,g,h end)(require)c("__root",function(require,n,c,d)function plugindef()finaleplugin.RequireSelection=false;finaleplugin.HandlesUndo=true;finaleplugin.Author="Robert Patterson"finaleplugin.Copyright="CC0 https://creativecommons.org/publicdomain/zero/1.0/"finaleplugin.Version="1.1"finaleplugin.Date="January 20, 2022"finaleplugin.CategoryTags="Note"finaleplugin.Notes=[[
        This script allows you to specify a number of chromatic steps by which to transpose and the script
        simplifies the spelling. Chromatic steps are half-steps in a standard 12-tone scale, but they are smaller
        if you are using a microtone sytem defined in a custom key signature.

        Normally the script opens a modeless window. However, if you invoke the plugin with a shift, option, or
        alt key pressed, it skips opening a window and uses the last settings you entered into the window.
        (This works with RGP Lua version 0.60 and higher.)
        
        If you are using custom key signatures with JW Lua or an early version of RGP Lua, you must create
        a custom_key_sig.config.txt file in a folder called `script_settings` within the same folder as the script.
        It should contains the following two lines that define the custom key signature you are using. Unfortunately,
        the JW Lua and early versions of RGP Lua do not allow scripts to read this information from the Finale document.
        
        (This example is for 31-EDO.)
        
        ```
        number_of_steps = 31
        diatonic_steps = {0, 5, 10, 13, 18, 23, 28}
        ```
        
        Later versions of RGP Lua (0.58 or higher) ignore this configuration file (if it exists) and read the correct
        information from the Finale document.
    ]]return"Transpose By Steps...","Transpose By Steps","Transpose by the number of steps given, simplifying spelling as needed."end;if not finenv.IsRGPLua then local o=finale.FCString()o:SetRunningLuaFolderPath()package.path=package.path..";"..o.LuaString.."?.lua"end;local p=require("library.transposition")local q=require("library.mixin")function do_transpose_by_step(r)if finenv.Region():IsEmpty()then return end;local s="Transpose By Steps "..tostring(finenv.Region().StartMeasure)if finenv.Region().StartMeasure~=finenv.Region().EndMeasure then s=s.." - "..tostring(finenv.Region().EndMeasure)end;local t=true;finenv.StartNewUndoBlock(s,false)for u in eachentrysaved(finenv.Region())do for v in each(u)do if not p.stepwise_transpose(v,r)then t=false end end end;if finenv.EndUndoBlock then finenv.EndUndoBlock(true)finenv.Region():Redraw()else finenv.StartNewUndoBlock(s,true)end;if not t then finenv.UI():AlertError("Finale is unable to represent some of the transposed pitches. These pitches were left at their original value.","Transposition Error")end;return t end;function create_dialog_box()local w=q.FCXCustomLuaWindow():SetTitle("Transpose By Steps")local x=0;local y=105;w:CreateStatic(0,x+2):SetText("Number Of Steps:")local z=y+(finenv.UI():IsOnMac()and 4 or 0)w:CreateEdit(z,x,"num_steps"):SetText("")w:CreateOkButton()w:CreateCancelButton()w:RegisterHandleOkButtonPressed(function(self)do_transpose_by_step(self:GetControl("num_steps"):GetInteger())end)return w end;function transpose_by_step()global_dialog=global_dialog or create_dialog_box()global_dialog:RunModeless()end;transpose_by_step()end)c("library.mixin",function(require,n,c,d)local A={}function A.finale_version(B,C,D)local E=bit32.bor(bit32.lshift(math.floor(B),24),bit32.lshift(math.floor(C),20))if D then E=bit32.bor(E,math.floor(D))end;return E end;function A.group_overlaps_region(F,G)if G:IsFullDocumentSpan()then return true end;local H=false;local I=finale.FCSystemStaves()I:LoadAllForRegion(G)for J in each(I)do if F:ContainsStaff(J:GetStaff())then H=true;break end end;if not H then return false end;if F.StartMeasure>G.EndMeasure or F.EndMeasure<G.StartMeasure then return false end;return true end;function A.group_is_contained_in_region(F,G)if not G:IsStaffIncluded(F.StartStaff)then return false end;if not G:IsStaffIncluded(F.EndStaff)then return false end;return true end;function A.staff_group_is_multistaff_instrument(F)local K=finale.FCMultiStaffInstruments()K:LoadAll()for L in each(K)do if L:ContainsStaff(F.StartStaff)and L.GroupID==F:GetItemID()then return true end end;return false end;function A.get_selected_region_or_whole_doc()local M=finenv.Region()if M:IsEmpty()then M:SetFullDocument()end;return M end;function A.get_first_cell_on_or_after_page(N)local O=N;local P=finale.FCPage()local Q=false;while P:Load(O)do if P:GetFirstSystem()>0 then Q=true;break end;O=O+1 end;if Q then local R=finale.FCStaffSystem()R:Load(P:GetFirstSystem())return finale.FCCell(R.FirstMeasure,R.TopStaff)end;local S=finale.FCMusicRegion()S:SetFullDocument()return finale.FCCell(S.EndMeasure,S.EndStaff)end;function A.get_top_left_visible_cell()if not finenv.UI():IsPageView()then local T=finale.FCMusicRegion()T:SetFullDocument()return finale.FCCell(finenv.UI():GetCurrentMeasure(),T.StartStaff)end;return A.get_first_cell_on_or_after_page(finenv.UI():GetCurrentPage())end;function A.get_top_left_selected_or_visible_cell()local M=finenv.Region()if not M:IsEmpty()then return finale.FCCell(M.StartMeasure,M.StartStaff)end;return A.get_top_left_visible_cell()end;function A.is_default_measure_number_visible_on_cell(U,V,W,X)local Y=finale.FCCurrentStaffSpec()if not Y:LoadForCell(V,0)then return false end;if U:GetShowOnTopStaff()and V.Staff==W.TopStaff then return true end;if U:GetShowOnBottomStaff()and V.Staff==W:CalcBottomStaff()then return true end;if Y.ShowMeasureNumbers then return not U:GetExcludeOtherStaves(X)end;return false end;function A.is_default_number_visible_and_left_aligned(U,V,Z,X,_)if U.UseScoreInfoForParts then X=false end;if _ and U:GetShowOnMultiMeasureRests(X)then if finale.MNALIGN_LEFT~=U:GetMultiMeasureAlignment(X)then return false end elseif V.Measure==Z.FirstMeasure then if not U:GetShowOnSystemStart()then return false end;if finale.MNALIGN_LEFT~=U:GetStartAlignment(X)then return false end else if not U:GetShowMultiples(X)then return false end;if finale.MNALIGN_LEFT~=U:GetMultipleAlignment(X)then return false end end;return A.is_default_measure_number_visible_on_cell(U,V,Z,X)end;function A.update_layout(a0,a1)a0=a0 or 1;a1=a1 or false;local a2=finale.FCPage()if a2:Load(a0)then a2:UpdateLayout(a1)end end;function A.get_current_part()local a3=finale.FCParts()a3:LoadAll()return a3:GetCurrent()end;function A.get_page_format_prefs()local a4=A.get_current_part()local a5=finale.FCPageFormatPrefs()local t=false;if a4:IsScore()then t=a5:LoadScore()else t=a5:LoadParts()end;return a5,t end;local a6=function(a7)local a8=finenv.UI():IsOnWindows()local a9=function(aa,ab)if finenv.UI():IsOnWindows()then return aa and os.getenv(aa)or""else return ab and os.getenv(ab)or""end end;local ac=a7 and a9("LOCALAPPDATA","HOME")or a9("COMMONPROGRAMFILES")if not a8 then ac=ac.."/Library/Application Support"end;ac=ac.."/SMuFL/Fonts/"return ac end;function A.get_smufl_font_list()local ad={}local ae=function(a7)local ac=a6(a7)local af=function()if finenv.UI():IsOnWindows()then return io.popen('dir "'..ac..'" /b /ad')else return io.popen('ls "'..ac..'"')end end;local ag=function(ah)local ai=finale.FCString()ai.LuaString=ah;return finenv.UI():IsFontAvailable(ai)end;for ah in af():lines()do if not ah:find("%.")then ah=ah:gsub(" Bold","")ah=ah:gsub(" Italic","")local ai=finale.FCString()ai.LuaString=ah;if ad[ah]or ag(ah)then ad[ah]=a7 and"user"or"system"end end end end;ae(true)ae(false)return ad end;function A.get_smufl_metadata_file(aj)if not aj then aj=finale.FCFontInfo()aj:LoadFontPrefs(finale.FONTPREF_MUSIC)end;local ak=function(al,aj)local am=al..aj.Name.."/"..aj.Name..".json"return io.open(am,"r")end;local an=ak(a6(true),aj)if an then return an end;return ak(a6(false),aj)end;function A.is_font_smufl_font(aj)if not aj then aj=finale.FCFontInfo()aj:LoadFontPrefs(finale.FONTPREF_MUSIC)end;if finenv.RawFinaleVersion>=A.finale_version(27,1)then if nil~=aj.IsSMuFLFont then return aj.IsSMuFLFont end end;local ao=A.get_smufl_metadata_file(aj)if nil~=ao then io.close(ao)return true end;return false end;function A.simple_input(ap,aq)local ar=finale.FCString()ar.LuaString=""local as=finale.FCString()local at=160;function format_ctrl(au,av,aw,ax)au:SetHeight(av)au:SetWidth(aw)as.LuaString=ax;au:SetText(as)end;title_width=string.len(ap)*6+54;if title_width>at then at=title_width end;text_width=string.len(aq)*6;if text_width>at then at=text_width end;as.LuaString=ap;local w=finale.FCCustomLuaWindow()w:SetTitle(as)local ay=w:CreateStatic(0,0)format_ctrl(ay,16,at,aq)local az=w:CreateEdit(0,20)format_ctrl(az,20,at,"")w:CreateOkButton()w:CreateCancelButton()function callback(au)end;w:RegisterHandleCommand(callback)if w:ExecuteModal(nil)==finale.EXECMODAL_OK then ar.LuaString=az:GetText(ar)return ar.LuaString end end;function A.is_finale_object(aA)return aA and type(aA)=="userdata"and aA.ClassName and aA.GetClassID and true or false end;function A.system_indent_set_to_prefs(Z,a5)a5=a5 or A.get_page_format_prefs()local aB=finale.FCMeasure()local aC=Z.FirstMeasure==1;if not aC and aB:Load(Z.FirstMeasure)then if aB.ShowFullNames then aC=true end end;if aC and a5.UseFirstSystemMargins then Z.LeftMargin=a5.FirstSystemLeft else Z.LeftMargin=a5.SystemLeft end;return Z:Save()end;function A.calc_script_name(aD)local aE=finale.FCString()if finenv.RunningLuaFilePath then aE.LuaString=finenv.RunningLuaFilePath()else aE:SetRunningLuaFilePath()end;local aF=finale.FCString()aE:SplitToPathAndFile(nil,aF)local E=aF.LuaString;if not aD then E=E:match("(.+)%..+")if not E or E==""then E=aF.LuaString end end;return E end;return A end)c("library.transposition",function(require,n,c,d)local A={}function A.finale_version(B,C,D)local E=bit32.bor(bit32.lshift(math.floor(B),24),bit32.lshift(math.floor(C),20))if D then E=bit32.bor(E,math.floor(D))end;return E end;function A.group_overlaps_region(F,G)if G:IsFullDocumentSpan()then return true end;local H=false;local I=finale.FCSystemStaves()I:LoadAllForRegion(G)for J in each(I)do if F:ContainsStaff(J:GetStaff())then H=true;break end end;if not H then return false end;if F.StartMeasure>G.EndMeasure or F.EndMeasure<G.StartMeasure then return false end;return true end;function A.group_is_contained_in_region(F,G)if not G:IsStaffIncluded(F.StartStaff)then return false end;if not G:IsStaffIncluded(F.EndStaff)then return false end;return true end;function A.staff_group_is_multistaff_instrument(F)local K=finale.FCMultiStaffInstruments()K:LoadAll()for L in each(K)do if L:ContainsStaff(F.StartStaff)and L.GroupID==F:GetItemID()then return true end end;return false end;function A.get_selected_region_or_whole_doc()local M=finenv.Region()if M:IsEmpty()then M:SetFullDocument()end;return M end;function A.get_first_cell_on_or_after_page(N)local O=N;local P=finale.FCPage()local Q=false;while P:Load(O)do if P:GetFirstSystem()>0 then Q=true;break end;O=O+1 end;if Q then local R=finale.FCStaffSystem()R:Load(P:GetFirstSystem())return finale.FCCell(R.FirstMeasure,R.TopStaff)end;local S=finale.FCMusicRegion()S:SetFullDocument()return finale.FCCell(S.EndMeasure,S.EndStaff)end;function A.get_top_left_visible_cell()if not finenv.UI():IsPageView()then local T=finale.FCMusicRegion()T:SetFullDocument()return finale.FCCell(finenv.UI():GetCurrentMeasure(),T.StartStaff)end;return A.get_first_cell_on_or_after_page(finenv.UI():GetCurrentPage())end;function A.get_top_left_selected_or_visible_cell()local M=finenv.Region()if not M:IsEmpty()then return finale.FCCell(M.StartMeasure,M.StartStaff)end;return A.get_top_left_visible_cell()end;function A.is_default_measure_number_visible_on_cell(U,V,W,X)local Y=finale.FCCurrentStaffSpec()if not Y:LoadForCell(V,0)then return false end;if U:GetShowOnTopStaff()and V.Staff==W.TopStaff then return true end;if U:GetShowOnBottomStaff()and V.Staff==W:CalcBottomStaff()then return true end;if Y.ShowMeasureNumbers then return not U:GetExcludeOtherStaves(X)end;return false end;function A.is_default_number_visible_and_left_aligned(U,V,Z,X,_)if U.UseScoreInfoForParts then X=false end;if _ and U:GetShowOnMultiMeasureRests(X)then if finale.MNALIGN_LEFT~=U:GetMultiMeasureAlignment(X)then return false end elseif V.Measure==Z.FirstMeasure then if not U:GetShowOnSystemStart()then return false end;if finale.MNALIGN_LEFT~=U:GetStartAlignment(X)then return false end else if not U:GetShowMultiples(X)then return false end;if finale.MNALIGN_LEFT~=U:GetMultipleAlignment(X)then return false end end;return A.is_default_measure_number_visible_on_cell(U,V,Z,X)end;function A.update_layout(a0,a1)a0=a0 or 1;a1=a1 or false;local a2=finale.FCPage()if a2:Load(a0)then a2:UpdateLayout(a1)end end;function A.get_current_part()local a3=finale.FCParts()a3:LoadAll()return a3:GetCurrent()end;function A.get_page_format_prefs()local a4=A.get_current_part()local a5=finale.FCPageFormatPrefs()local t=false;if a4:IsScore()then t=a5:LoadScore()else t=a5:LoadParts()end;return a5,t end;local a6=function(a7)local a8=finenv.UI():IsOnWindows()local a9=function(aa,ab)if finenv.UI():IsOnWindows()then return aa and os.getenv(aa)or""else return ab and os.getenv(ab)or""end end;local ac=a7 and a9("LOCALAPPDATA","HOME")or a9("COMMONPROGRAMFILES")if not a8 then ac=ac.."/Library/Application Support"end;ac=ac.."/SMuFL/Fonts/"return ac end;function A.get_smufl_font_list()local ad={}local ae=function(a7)local ac=a6(a7)local af=function()if finenv.UI():IsOnWindows()then return io.popen('dir "'..ac..'" /b /ad')else return io.popen('ls "'..ac..'"')end end;local ag=function(ah)local ai=finale.FCString()ai.LuaString=ah;return finenv.UI():IsFontAvailable(ai)end;for ah in af():lines()do if not ah:find("%.")then ah=ah:gsub(" Bold","")ah=ah:gsub(" Italic","")local ai=finale.FCString()ai.LuaString=ah;if ad[ah]or ag(ah)then ad[ah]=a7 and"user"or"system"end end end end;ae(true)ae(false)return ad end;function A.get_smufl_metadata_file(aj)if not aj then aj=finale.FCFontInfo()aj:LoadFontPrefs(finale.FONTPREF_MUSIC)end;local ak=function(al,aj)local am=al..aj.Name.."/"..aj.Name..".json"return io.open(am,"r")end;local an=ak(a6(true),aj)if an then return an end;return ak(a6(false),aj)end;function A.is_font_smufl_font(aj)if not aj then aj=finale.FCFontInfo()aj:LoadFontPrefs(finale.FONTPREF_MUSIC)end;if finenv.RawFinaleVersion>=A.finale_version(27,1)then if nil~=aj.IsSMuFLFont then return aj.IsSMuFLFont end end;local ao=A.get_smufl_metadata_file(aj)if nil~=ao then io.close(ao)return true end;return false end;function A.simple_input(ap,aq)local ar=finale.FCString()ar.LuaString=""local as=finale.FCString()local at=160;function format_ctrl(au,av,aw,ax)au:SetHeight(av)au:SetWidth(aw)as.LuaString=ax;au:SetText(as)end;title_width=string.len(ap)*6+54;if title_width>at then at=title_width end;text_width=string.len(aq)*6;if text_width>at then at=text_width end;as.LuaString=ap;local w=finale.FCCustomLuaWindow()w:SetTitle(as)local ay=w:CreateStatic(0,0)format_ctrl(ay,16,at,aq)local az=w:CreateEdit(0,20)format_ctrl(az,20,at,"")w:CreateOkButton()w:CreateCancelButton()function callback(au)end;w:RegisterHandleCommand(callback)if w:ExecuteModal(nil)==finale.EXECMODAL_OK then ar.LuaString=az:GetText(ar)return ar.LuaString end end;function A.is_finale_object(aA)return aA and type(aA)=="userdata"and aA.ClassName and aA.GetClassID and true or false end;function A.system_indent_set_to_prefs(Z,a5)a5=a5 or A.get_page_format_prefs()local aB=finale.FCMeasure()local aC=Z.FirstMeasure==1;if not aC and aB:Load(Z.FirstMeasure)then if aB.ShowFullNames then aC=true end end;if aC and a5.UseFirstSystemMargins then Z.LeftMargin=a5.FirstSystemLeft else Z.LeftMargin=a5.SystemLeft end;return Z:Save()end;function A.calc_script_name(aD)local aE=finale.FCString()if finenv.RunningLuaFilePath then aE.LuaString=finenv.RunningLuaFilePath()else aE:SetRunningLuaFilePath()end;local aF=finale.FCString()aE:SplitToPathAndFile(nil,aF)local E=aF.LuaString;if not aD then E=E:match("(.+)%..+")if not E or E==""then E=aF.LuaString end end;return E end;return A end)return a("__root")