local a,b,c,d=(function(e)local f={[{}]=true}local g;local h={}local require;local i={}g=function(j,k)if not h[j]then h[j]=k end end;require=function(j)local l=i[j]if l then if l==f then return nil end else if not h[j]then if not e then local m=type(j)=='string'and'\"'..j..'\"'or tostring(j)error('Tried to require '..m..', but no such module has been registered')else return e(j)end end;i[j]=f;l=h[j](require,i,g,h)i[j]=l end;return l end;return require,i,g,h end)(require)c("__root",function(require,n,c,d)function plugindef()finaleplugin.RequireSelection=true;finaleplugin.Author="Carl Vine"finaleplugin.AuthorURL="http://carlvine.com"finaleplugin.Copyright="CC0 https://creativecommons.org/publicdomain/zero/1.0/"finaleplugin.Version="v1.45"finaleplugin.Date="2022/05/16"finaleplugin.Notes=[[
        This script explodes a set of chords from layer one on one staff onto single lines on subsequent staves. 
        The number of staves is determined by the largest number of notes in any chord.
        It warns if pre-existing music in the destination will be erased. 
        It duplicates all markings from the original and resets the current clef on each destination staff.

        This script allows for the following configuration:

        ```
        fix_note_spacing = true -- to respace music automatically when the script finishes
        ```
    ]]return"Staff Explode","Staff Explode","Staff Explode onto consecutive single staves"end;local o=require("library.configuration")local p=require("library.clef")local q={fix_note_spacing=true}o.get_parameters("staff_explode.config.txt",q)function show_error(r)local s={need_more_staves="There are not enough empty\nstaves to explode onto",only_one_staff="Please select only one staff!",empty_region="Please select a region\nwith some notes in it!",require_chords="Chords must contain\nat least two pitches"}finenv.UI():AlertNeutral("script: "..plugindef(),s[r])return-1 end;function should_overwrite_existing_music()local t=finenv.UI():AlertOkCancel("script: "..plugindef(),"Overwrite existing music?")local u=t==0;return u end;function get_note_count(v)local w=0;for x in eachentry(v)do if x.Count>w then w=x.Count end end;if w==0 then return show_error("empty_region")end;if w<2 then return show_error("require_chords")end;return w end;function ensure_score_has_enough_staves(y,w)local z=finale.FCStaves()z:LoadAll()if w>z.Count+1-y then return false end;return true end;function staff_explode()local v=finale.FCMusicRegion()v:SetCurrentSelection()if v:CalcStaffSpan()>1 then return show_error("only_one_staff")end;local A=v.StartSlot;local B=v.StartMeasure;local C=v.EndMeasure;local D={}D[1]=v;local E=get_note_count(v)if E<=0 then return end;if not ensure_score_has_enough_staves(A,E)then show_error("need_more_staves")return end;local F=true;for y=2,E do D[y]=finale.FCMusicRegion()D[y]:SetRegion(D[1])D[y]:CopyMusic()local G=A+y-1;D[y].StartSlot=G;D[y].EndSlot=G;if F then for x in eachentry(D[y])do if x.Count>0 then F=false;break end end end end;if F or should_overwrite_existing_music()then for y=1,E do if y>1 then D[y]:PasteMusic()p.restore_default_clef(B,C,D[y].StartStaff)end;local H=y-1;for x in eachentrysaved(D[y])do if x:IsNote()then local I=x.Count-y;if H>0 then for J=1,H do x:DeleteNote(x:CalcHighestNote(nil))end end;if I>0 then for J=1,I do x:DeleteNote(x:CalcLowestNote(nil))end end end end end;if q.fix_note_spacing then D[1]:SetFullMeasureStack()D[1]:SetInDocument()finenv.UI():MenuCommand(finale.MENUCMD_NOTESPACING)D[1].StartSlot=A;D[1].EndSlot=A;D[1]:SetInDocument()end end;for y=2,E do D[y]:ReleaseMusic()end;finenv:Region():SetInDocument()end;staff_explode()end)c("library.clef",function(require,n,c,d)local K={}function K.finale_version(L,M,N)local O=bit32.bor(bit32.lshift(math.floor(L),24),bit32.lshift(math.floor(M),20))if N then O=bit32.bor(O,math.floor(N))end;return O end;function K.group_overlaps_region(P,Q)if Q:IsFullDocumentSpan()then return true end;local R=false;local S=finale.FCSystemStaves()S:LoadAllForRegion(Q)for T in each(S)do if P:ContainsStaff(T:GetStaff())then R=true;break end end;if not R then return false end;if P.StartMeasure>Q.EndMeasure or P.EndMeasure<Q.StartMeasure then return false end;return true end;function K.group_is_contained_in_region(P,Q)if not Q:IsStaffIncluded(P.StartStaff)then return false end;if not Q:IsStaffIncluded(P.EndStaff)then return false end;return true end;function K.staff_group_is_multistaff_instrument(P)local U=finale.FCMultiStaffInstruments()U:LoadAll()for V in each(U)do if V:ContainsStaff(P.StartStaff)and V.GroupID==P:GetItemID()then return true end end;return false end;function K.get_selected_region_or_whole_doc()local W=finenv.Region()if W:IsEmpty()then W:SetFullDocument()end;return W end;function K.get_first_cell_on_or_after_page(X)local Y=X;local Z=finale.FCPage()local _=false;while Z:Load(Y)do if Z:GetFirstSystem()>0 then _=true;break end;Y=Y+1 end;if _ then local a0=finale.FCStaffSystem()a0:Load(Z:GetFirstSystem())return finale.FCCell(a0.FirstMeasure,a0.TopStaff)end;local a1=finale.FCMusicRegion()a1:SetFullDocument()return finale.FCCell(a1.EndMeasure,a1.EndStaff)end;function K.get_top_left_visible_cell()if not finenv.UI():IsPageView()then local a2=finale.FCMusicRegion()a2:SetFullDocument()return finale.FCCell(finenv.UI():GetCurrentMeasure(),a2.StartStaff)end;return K.get_first_cell_on_or_after_page(finenv.UI():GetCurrentPage())end;function K.get_top_left_selected_or_visible_cell()local W=finenv.Region()if not W:IsEmpty()then return finale.FCCell(W.StartMeasure,W.StartStaff)end;return K.get_top_left_visible_cell()end;function K.is_default_measure_number_visible_on_cell(a3,a4,a5,a6)local a7=finale.FCCurrentStaffSpec()if not a7:LoadForCell(a4,0)then return false end;if a3:GetShowOnTopStaff()and a4.Staff==a5.TopStaff then return true end;if a3:GetShowOnBottomStaff()and a4.Staff==a5:CalcBottomStaff()then return true end;if a7.ShowMeasureNumbers then return not a3:GetExcludeOtherStaves(a6)end;return false end;function K.is_default_number_visible_and_left_aligned(a3,a4,a8,a6,a9)if a3.UseScoreInfoForParts then a6=false end;if a9 and a3:GetShowOnMultiMeasureRests(a6)then if finale.MNALIGN_LEFT~=a3:GetMultiMeasureAlignment(a6)then return false end elseif a4.Measure==a8.FirstMeasure then if not a3:GetShowOnSystemStart()then return false end;if finale.MNALIGN_LEFT~=a3:GetStartAlignment(a6)then return false end else if not a3:GetShowMultiples(a6)then return false end;if finale.MNALIGN_LEFT~=a3:GetMultipleAlignment(a6)then return false end end;return K.is_default_measure_number_visible_on_cell(a3,a4,a8,a6)end;function K.update_layout(aa,ab)aa=aa or 1;ab=ab or false;local ac=finale.FCPage()if ac:Load(aa)then ac:UpdateLayout(ab)end end;function K.get_current_part()local ad=finale.FCParts()ad:LoadAll()return ad:GetCurrent()end;function K.get_page_format_prefs()local ae=K.get_current_part()local af=finale.FCPageFormatPrefs()local ag=false;if ae:IsScore()then ag=af:LoadScore()else ag=af:LoadParts()end;return af,ag end;function K.get_smufl_metadata_file(ah)if not ah then ah=finale.FCFontInfo()ah:LoadFontPrefs(finale.FONTPREF_MUSIC)end;local ai=function(aj,ah)local ak=aj.."/SMuFL/Fonts/"..ah.Name.."/"..ah.Name..".json"return io.open(ak,"r")end;local al=""if finenv.UI():IsOnWindows()then al=os.getenv("LOCALAPPDATA")else al=os.getenv("HOME").."/Library/Application Support"end;local am=ai(al,ah)if nil~=am then return am end;local an="/Library/Application Support"if finenv.UI():IsOnWindows()then an=os.getenv("COMMONPROGRAMFILES")end;return ai(an,ah)end;function K.is_font_smufl_font(ah)if not ah then ah=finale.FCFontInfo()ah:LoadFontPrefs(finale.FONTPREF_MUSIC)end;if finenv.RawFinaleVersion>=K.finale_version(27,1)then if nil~=ah.IsSMuFLFont then return ah.IsSMuFLFont end end;local ao=K.get_smufl_metadata_file(ah)if nil~=ao then io.close(ao)return true end;return false end;function K.simple_input(ap,aq)local ar=finale.FCString()ar.LuaString=""local as=finale.FCString()local at=160;function format_ctrl(au,av,aw,ax)au:SetHeight(av)au:SetWidth(aw)as.LuaString=ax;au:SetText(as)end;title_width=string.len(ap)*6+54;if title_width>at then at=title_width end;text_width=string.len(aq)*6;if text_width>at then at=text_width end;as.LuaString=ap;local ay=finale.FCCustomLuaWindow()ay:SetTitle(as)local az=ay:CreateStatic(0,0)format_ctrl(az,16,at,aq)local aA=ay:CreateEdit(0,20)format_ctrl(aA,20,at,"")ay:CreateOkButton()ay:CreateCancelButton()function callback(au)end;ay:RegisterHandleCommand(callback)if ay:ExecuteModal(nil)==finale.EXECMODAL_OK then ar.LuaString=aA:GetText(ar)return ar.LuaString end end;function K.is_finale_object(aB)return aB and type(aB)=="userdata"and aB.ClassName and aB.GetClassID and true or false end;function K.system_indent_set_to_prefs(a8,af)af=af or K.get_page_format_prefs()local aC=finale.FCMeasure()local aD=a8.FirstMeasure==1;if not aD and aC:Load(a8.FirstMeasure)then if aC.ShowFullNames then aD=true end end;if aD and af.UseFirstSystemMargins then a8.LeftMargin=af.FirstSystemLeft else a8.LeftMargin=af.SystemLeft end;return a8:Save()end;return K end)c("library.configuration",function(require,n,c,d)local K={}function K.finale_version(L,M,N)local O=bit32.bor(bit32.lshift(math.floor(L),24),bit32.lshift(math.floor(M),20))if N then O=bit32.bor(O,math.floor(N))end;return O end;function K.group_overlaps_region(P,Q)if Q:IsFullDocumentSpan()then return true end;local R=false;local S=finale.FCSystemStaves()S:LoadAllForRegion(Q)for T in each(S)do if P:ContainsStaff(T:GetStaff())then R=true;break end end;if not R then return false end;if P.StartMeasure>Q.EndMeasure or P.EndMeasure<Q.StartMeasure then return false end;return true end;function K.group_is_contained_in_region(P,Q)if not Q:IsStaffIncluded(P.StartStaff)then return false end;if not Q:IsStaffIncluded(P.EndStaff)then return false end;return true end;function K.staff_group_is_multistaff_instrument(P)local U=finale.FCMultiStaffInstruments()U:LoadAll()for V in each(U)do if V:ContainsStaff(P.StartStaff)and V.GroupID==P:GetItemID()then return true end end;return false end;function K.get_selected_region_or_whole_doc()local W=finenv.Region()if W:IsEmpty()then W:SetFullDocument()end;return W end;function K.get_first_cell_on_or_after_page(X)local Y=X;local Z=finale.FCPage()local _=false;while Z:Load(Y)do if Z:GetFirstSystem()>0 then _=true;break end;Y=Y+1 end;if _ then local a0=finale.FCStaffSystem()a0:Load(Z:GetFirstSystem())return finale.FCCell(a0.FirstMeasure,a0.TopStaff)end;local a1=finale.FCMusicRegion()a1:SetFullDocument()return finale.FCCell(a1.EndMeasure,a1.EndStaff)end;function K.get_top_left_visible_cell()if not finenv.UI():IsPageView()then local a2=finale.FCMusicRegion()a2:SetFullDocument()return finale.FCCell(finenv.UI():GetCurrentMeasure(),a2.StartStaff)end;return K.get_first_cell_on_or_after_page(finenv.UI():GetCurrentPage())end;function K.get_top_left_selected_or_visible_cell()local W=finenv.Region()if not W:IsEmpty()then return finale.FCCell(W.StartMeasure,W.StartStaff)end;return K.get_top_left_visible_cell()end;function K.is_default_measure_number_visible_on_cell(a3,a4,a5,a6)local a7=finale.FCCurrentStaffSpec()if not a7:LoadForCell(a4,0)then return false end;if a3:GetShowOnTopStaff()and a4.Staff==a5.TopStaff then return true end;if a3:GetShowOnBottomStaff()and a4.Staff==a5:CalcBottomStaff()then return true end;if a7.ShowMeasureNumbers then return not a3:GetExcludeOtherStaves(a6)end;return false end;function K.is_default_number_visible_and_left_aligned(a3,a4,a8,a6,a9)if a3.UseScoreInfoForParts then a6=false end;if a9 and a3:GetShowOnMultiMeasureRests(a6)then if finale.MNALIGN_LEFT~=a3:GetMultiMeasureAlignment(a6)then return false end elseif a4.Measure==a8.FirstMeasure then if not a3:GetShowOnSystemStart()then return false end;if finale.MNALIGN_LEFT~=a3:GetStartAlignment(a6)then return false end else if not a3:GetShowMultiples(a6)then return false end;if finale.MNALIGN_LEFT~=a3:GetMultipleAlignment(a6)then return false end end;return K.is_default_measure_number_visible_on_cell(a3,a4,a8,a6)end;function K.update_layout(aa,ab)aa=aa or 1;ab=ab or false;local ac=finale.FCPage()if ac:Load(aa)then ac:UpdateLayout(ab)end end;function K.get_current_part()local ad=finale.FCParts()ad:LoadAll()return ad:GetCurrent()end;function K.get_page_format_prefs()local ae=K.get_current_part()local af=finale.FCPageFormatPrefs()local ag=false;if ae:IsScore()then ag=af:LoadScore()else ag=af:LoadParts()end;return af,ag end;function K.get_smufl_metadata_file(ah)if not ah then ah=finale.FCFontInfo()ah:LoadFontPrefs(finale.FONTPREF_MUSIC)end;local ai=function(aj,ah)local ak=aj.."/SMuFL/Fonts/"..ah.Name.."/"..ah.Name..".json"return io.open(ak,"r")end;local al=""if finenv.UI():IsOnWindows()then al=os.getenv("LOCALAPPDATA")else al=os.getenv("HOME").."/Library/Application Support"end;local am=ai(al,ah)if nil~=am then return am end;local an="/Library/Application Support"if finenv.UI():IsOnWindows()then an=os.getenv("COMMONPROGRAMFILES")end;return ai(an,ah)end;function K.is_font_smufl_font(ah)if not ah then ah=finale.FCFontInfo()ah:LoadFontPrefs(finale.FONTPREF_MUSIC)end;if finenv.RawFinaleVersion>=K.finale_version(27,1)then if nil~=ah.IsSMuFLFont then return ah.IsSMuFLFont end end;local ao=K.get_smufl_metadata_file(ah)if nil~=ao then io.close(ao)return true end;return false end;function K.simple_input(ap,aq)local ar=finale.FCString()ar.LuaString=""local as=finale.FCString()local at=160;function format_ctrl(au,av,aw,ax)au:SetHeight(av)au:SetWidth(aw)as.LuaString=ax;au:SetText(as)end;title_width=string.len(ap)*6+54;if title_width>at then at=title_width end;text_width=string.len(aq)*6;if text_width>at then at=text_width end;as.LuaString=ap;local ay=finale.FCCustomLuaWindow()ay:SetTitle(as)local az=ay:CreateStatic(0,0)format_ctrl(az,16,at,aq)local aA=ay:CreateEdit(0,20)format_ctrl(aA,20,at,"")ay:CreateOkButton()ay:CreateCancelButton()function callback(au)end;ay:RegisterHandleCommand(callback)if ay:ExecuteModal(nil)==finale.EXECMODAL_OK then ar.LuaString=aA:GetText(ar)return ar.LuaString end end;function K.is_finale_object(aB)return aB and type(aB)=="userdata"and aB.ClassName and aB.GetClassID and true or false end;function K.system_indent_set_to_prefs(a8,af)af=af or K.get_page_format_prefs()local aC=finale.FCMeasure()local aD=a8.FirstMeasure==1;if not aD and aC:Load(a8.FirstMeasure)then if aC.ShowFullNames then aD=true end end;if aD and af.UseFirstSystemMargins then a8.LeftMargin=af.FirstSystemLeft else a8.LeftMargin=af.SystemLeft end;return a8:Save()end;return K end)return a("__root")