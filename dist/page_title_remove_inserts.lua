local a,b,c,d=(function(e)local f={[{}]=true}local g;local h={}local require;local i={}g=function(j,k)if not h[j]then h[j]=k end end;require=function(j)local l=i[j]if l then if l==f then return nil end else if not h[j]then if not e then local m=type(j)=='string'and'\"'..j..'\"'or tostring(j)error('Tried to require '..m..', but no such module has been registered')else return e(j)end end;i[j]=f;l=h[j](require,i,g,h)i[j]=l end;return l end;return require,i,g,h end)(require)c("__root",function(require,n,c,d)function plugindef()finaleplugin.Author="Robert Patterson"finaleplugin.Copyright="CC0 https://creativecommons.org/publicdomain/zero/1.0/"finaleplugin.Version="1.0"finaleplugin.Date="February 21, 2021"finaleplugin.CategoryTags="Page"finaleplugin.Notes=[[
        Finale makes it surprisingly difficult to remove text inserts from an existing Page Text.
        It requires extremely precise positioning of the cursor, and even then it frequently modifies
        the insert instead of the Page Text. This is especially true if the Page Text contains *only* 
        one or more inserts. This script allows you to select a Page Text and remove
        the inserts with no fuss.
    ]]return"Remove Inserts From Page Text...","Remove Inserts From Page Text","Removes text inserts from selected Page Text."end;local o=require("library.enigma_string")function do_dialog_box(p)local q=finale.FCString()local r=finale.FCCustomWindow()q.LuaString="Select Page Text"r:SetTitle(q)local s=0;local t=26;local u=65;static=r:CreateStatic(0,s+2)q.LuaString="Page Text:"static:SetText(q)local v=r:CreatePopup(u,s)for w,x in pairs(p)do q.LuaString=x;v:AddString(q)end;v:SetWidth(250)s=s+t;local y=r:CreateCheckbox(0,s+2)q.LuaString="Replace Inserts With Generic Text"y:SetText(q)y:SetWidth(250)y:SetCheck(1)s=s+t;r:CreateOkButton()r:CreateCancelButton()if finale.EXECMODAL_OK==r:ExecuteModal(nil)then return true,1+v:GetSelectedItem(),0~=y:GetCheck()end;return false end;function page_title_remove_inserts()local z=finale.FCPageTexts()z:LoadAll()local p={}local A={}for v in each(z)do local B=v:CreateTextString()if B:ContainsEnigmaTextInsert()then B:TrimEnigmaFontTags()if nil~=B then table.insert(p,B.LuaString)table.insert(A,v)end end end;local C,D,y=do_dialog_box(p)if C then local E=A[D]local F=E:CreateTextString()o.remove_inserts(F,y)E:SaveTextString(F)E:Save()end end;page_title_remove_inserts()end)c("library.enigma_string",function(require,n,c,d)local G={}function G.finale_version(H,I,J)local K=bit32.bor(bit32.lshift(math.floor(H),24),bit32.lshift(math.floor(I),20))if J then K=bit32.bor(K,math.floor(J))end;return K end;function G.group_overlaps_region(L,M)if M:IsFullDocumentSpan()then return true end;local N=false;local O=finale.FCSystemStaves()O:LoadAllForRegion(M)for P in each(O)do if L:ContainsStaff(P:GetStaff())then N=true;break end end;if not N then return false end;if L.StartMeasure>M.EndMeasure or L.EndMeasure<M.StartMeasure then return false end;return true end;function G.group_is_contained_in_region(L,M)if not M:IsStaffIncluded(L.StartStaff)then return false end;if not M:IsStaffIncluded(L.EndStaff)then return false end;return true end;function G.staff_group_is_multistaff_instrument(L)local Q=finale.FCMultiStaffInstruments()Q:LoadAll()for R in each(Q)do if R:ContainsStaff(L.StartStaff)and R.GroupID==L:GetItemID()then return true end end;return false end;function G.get_selected_region_or_whole_doc()local S=finenv.Region()if S:IsEmpty()then S:SetFullDocument()end;return S end;function G.get_first_cell_on_or_after_page(T)local U=T;local V=finale.FCPage()local W=false;while V:Load(U)do if V:GetFirstSystem()>0 then W=true;break end;U=U+1 end;if W then local X=finale.FCStaffSystem()X:Load(V:GetFirstSystem())return finale.FCCell(X.FirstMeasure,X.TopStaff)end;local Y=finale.FCMusicRegion()Y:SetFullDocument()return finale.FCCell(Y.EndMeasure,Y.EndStaff)end;function G.get_top_left_visible_cell()if not finenv.UI():IsPageView()then local Z=finale.FCMusicRegion()Z:SetFullDocument()return finale.FCCell(finenv.UI():GetCurrentMeasure(),Z.StartStaff)end;return G.get_first_cell_on_or_after_page(finenv.UI():GetCurrentPage())end;function G.get_top_left_selected_or_visible_cell()local S=finenv.Region()if not S:IsEmpty()then return finale.FCCell(S.StartMeasure,S.StartStaff)end;return G.get_top_left_visible_cell()end;function G.is_default_measure_number_visible_on_cell(_,a0,a1,a2)local a3=finale.FCCurrentStaffSpec()if not a3:LoadForCell(a0,0)then return false end;if _:GetShowOnTopStaff()and a0.Staff==a1.TopStaff then return true end;if _:GetShowOnBottomStaff()and a0.Staff==a1:CalcBottomStaff()then return true end;if a3.ShowMeasureNumbers then return not _:GetExcludeOtherStaves(a2)end;return false end;function G.is_default_number_visible_and_left_aligned(_,a0,a4,a2,a5)if _.UseScoreInfoForParts then a2=false end;if a5 and _:GetShowOnMultiMeasureRests(a2)then if finale.MNALIGN_LEFT~=_:GetMultiMeasureAlignment(a2)then return false end elseif a0.Measure==a4.FirstMeasure then if not _:GetShowOnSystemStart()then return false end;if finale.MNALIGN_LEFT~=_:GetStartAlignment(a2)then return false end else if not _:GetShowMultiples(a2)then return false end;if finale.MNALIGN_LEFT~=_:GetMultipleAlignment(a2)then return false end end;return G.is_default_measure_number_visible_on_cell(_,a0,a4,a2)end;function G.update_layout(a6,a7)a6=a6 or 1;a7=a7 or false;local a8=finale.FCPage()if a8:Load(a6)then a8:UpdateLayout(a7)end end;function G.get_current_part()local a9=finale.FCParts()a9:LoadAll()return a9:GetCurrent()end;function G.get_page_format_prefs()local aa=G.get_current_part()local ab=finale.FCPageFormatPrefs()local C=false;if aa:IsScore()then C=ab:LoadScore()else C=ab:LoadParts()end;return ab,C end;local ac=function(ad)local ae=finenv.UI():IsOnWindows()local af=function(ag,ah)if finenv.UI():IsOnWindows()then return ag and os.getenv(ag)or""else return ah and os.getenv(ah)or""end end;local ai=ad and af("LOCALAPPDATA","HOME")or af("COMMONPROGRAMFILES")if not ae then ai=ai.."/Library/Application Support"end;ai=ai.."/SMuFL/Fonts/"return ai end;function G.get_smufl_font_list()local aj={}local ak=function(ad)local ai=ac(ad)local al=function()if finenv.UI():IsOnWindows()then return io.popen('dir "'..ai..'" /b /ad')else return io.popen('ls "'..ai..'"')end end;local am=function(an)local ao=finale.FCString()ao.LuaString=an;return finenv.UI():IsFontAvailable(ao)end;for an in al():lines()do if not an:find("%.")then an=an:gsub(" Bold","")an=an:gsub(" Italic","")local ao=finale.FCString()ao.LuaString=an;if aj[an]or am(an)then aj[an]=ad and"user"or"system"end end end end;ak(true)ak(false)return aj end;function G.get_smufl_metadata_file(ap)if not ap then ap=finale.FCFontInfo()ap:LoadFontPrefs(finale.FONTPREF_MUSIC)end;local aq=function(ar,ap)local as=ar..ap.Name.."/"..ap.Name..".json"return io.open(as,"r")end;local at=aq(ac(true),ap)if at then return at end;return aq(ac(false),ap)end;function G.is_font_smufl_font(ap)if not ap then ap=finale.FCFontInfo()ap:LoadFontPrefs(finale.FONTPREF_MUSIC)end;if finenv.RawFinaleVersion>=G.finale_version(27,1)then if nil~=ap.IsSMuFLFont then return ap.IsSMuFLFont end end;local au=G.get_smufl_metadata_file(ap)if nil~=au then io.close(au)return true end;return false end;function G.simple_input(av,aw)local ax=finale.FCString()ax.LuaString=""local q=finale.FCString()local ay=160;function format_ctrl(az,aA,aB,aC)az:SetHeight(aA)az:SetWidth(aB)q.LuaString=aC;az:SetText(q)end;title_width=string.len(av)*6+54;if title_width>ay then ay=title_width end;text_width=string.len(aw)*6;if text_width>ay then ay=text_width end;q.LuaString=av;local r=finale.FCCustomLuaWindow()r:SetTitle(q)local aD=r:CreateStatic(0,0)format_ctrl(aD,16,ay,aw)local aE=r:CreateEdit(0,20)format_ctrl(aE,20,ay,"")r:CreateOkButton()r:CreateCancelButton()function callback(az)end;r:RegisterHandleCommand(callback)if r:ExecuteModal(nil)==finale.EXECMODAL_OK then ax.LuaString=aE:GetText(ax)return ax.LuaString end end;function G.is_finale_object(aF)return aF and type(aF)=="userdata"and aF.ClassName and aF.GetClassID and true or false end;function G.system_indent_set_to_prefs(a4,ab)ab=ab or G.get_page_format_prefs()local aG=finale.FCMeasure()local aH=a4.FirstMeasure==1;if not aH and aG:Load(a4.FirstMeasure)then if aG.ShowFullNames then aH=true end end;if aH and ab.UseFirstSystemMargins then a4.LeftMargin=ab.FirstSystemLeft else a4.LeftMargin=ab.SystemLeft end;return a4:Save()end;function G.calc_script_name(aI)local aJ=finale.FCString()if finenv.RunningLuaFilePath then aJ.LuaString=finenv.RunningLuaFilePath()else aJ:SetRunningLuaFilePath()end;local aK=finale.FCString()aJ:SplitToPathAndFile(nil,aK)local K=aK.LuaString;if not aI then K=K:match("(.+)%..+")if not K or K==""then K=aK.LuaString end end;return K end;return G end)return a("__root")