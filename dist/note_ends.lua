function plugindef()finaleplugin.RequireSelection=true;finaleplugin.Author="Carl Vine"finaleplugin.AuthorURL="http://carlvine.com"finaleplugin.Copyright="CC0 https://creativecommons.org/publicdomain/zero/1.0/"finaleplugin.Version="v0.53"finaleplugin.Date="2022/06/03"finaleplugin.AdditionalMenuOptions=[[ Note Ends Eighths ]]finaleplugin.AdditionalUndoText=[[    Note Ends Eighths ]]finaleplugin.AdditionalPrefixes=[[    eighth_notes = true ]]finaleplugin.AdditionalDescriptions=[[ Change smaller notes followed by rests into eighth notes ]]finaleplugin.MinJWLuaVersion=0.62;finaleplugin.Notes=[[
        This plug-in aligns the ends of notes followed by a rest to a specific "duration boundary". 
        Helps improve readability of music with lots of short notes and rests. 
        It has 2 modes: Eighth Notes and Quarter Notes.
]]return"Note Ends Quarters","Note Ends Quarters","Change smaller notes followed by rests into quarter notes"end;eighth_notes=eighth_notes or false;function expand_note_ends()local a=false;local b=eighth_notes and finale.NOTE_8TH or finale.NOTE_QUARTER;local c=b;local d=0;local e=finale.FCMeasure()local f=false;for g in eachentrysaved(finenv.Region())do if d~=g.Measure then d=g.Measure;e:Load(d)local h=e:GetTimeSignature()c=h:CalcLargestBeatDuration()f=c%3==0 end;local i=g.MeasurePos%c;local j=g.MeasurePos%(b/2)local k=math.floor(g.MeasurePos/c)if a then g.Duration=0;a=false elseif g:IsNote()and g:Next()and g:Next():IsRest()and g.Duration<b and(j==0 and c>=i+b or not f and not eighth_notes and j==0 and k%2==0)then local l=g.Duration+g:Next().Duration;g.Duration=b;if l==b then a=true elseif l>b then g:Next().Duration=l-b;a=false end end end end;expand_note_ends()