local a,b,c,d=(function(e)local f={[{}]=true}local g;local h={}local require;local i={}g=function(j,k)if not h[j]then h[j]=k end end;require=function(j)local l=i[j]if l then if l==f then return nil end else if not h[j]then if not e then local m=type(j)=='string'and'\"'..j..'\"'or tostring(j)error('Tried to require '..m..', but no such module has been registered')else return e(j)end end;i[j]=f;l=h[j](require,i,g,h)i[j]=l end;return l end;return require,i,g,h end)(require)c("__root",function(require,n,c,d)function plugindef()finaleplugin.RequireSelection=true;finaleplugin.Author="Robert Patterson"finaleplugin.Copyright="CC0 https://creativecommons.org/publicdomain/zero/1.0/"finaleplugin.Version="2.0"finaleplugin.Date="May 17, 2022"finaleplugin.CategoryTags="Note"finaleplugin.MinJWLuaVersion=0.62;finaleplugin.Notes=[[
        This script beams together any notes or rests in the selected region that can
        be beamed together and breaks beams that cross into or out of the selected
        region at the boundaries of the selected region. The beam options in Finaleâ€™s
        Document Settings determine whether rests can be included at the start or end of a beam.
        If you select multiple staves vertically, you can create the same beaming pattern
        across all the staves with a single invocation of the script.

        It does *not* create beams over barlines.

        By default, the plugin installs two menu options, one to beam the selected region and
        the other to unbeam the selected region. You can instead unbeam all notes in the selected region
        by invoking the "Beam Selected Region" menu option with the Option key pressed (macOS) or
        the Shift key pressed. This is identical to invoking the "Unbeam Selected Region" menu option.

        This script could be particularly useful if you assign it a keystroke using a keyboard macro utility.
    ]]finaleplugin.AdditionalMenuOptions=[[
        Unbeam Selected Region
    ]]finaleplugin.AdditionalDescriptions=[[
        Unbeam Selected Region
    ]]finaleplugin.AdditionalPrefixes=[[
        do_unbeam = true
    ]]return"Beam Selected Region","Beam Selected Region","Beam Selected Region"end;local o=require("library.note_entry")function beam_selected_region()local p=true;local q=false;local r=0;local s=-1;for t in eachentrysaved(finenv.Region())do if r~=t:GetStaff()or s~=t:GetLayerNumber()then p=true;q=true;r=t:GetStaff()s=t:GetLayerNumber()end;local u=t:GetVoice2()if not u then q=true end;if t:GetDuration()<finale.QUARTER_NOTE then if do_unbeam then t:SetBeamBeat(true)elseif not u and p or u and q then t:SetBeamBeat(true)if not u then p=false else q=false end else t:SetBeamBeat(false)end;local v=o.get_next_same_v(t)if nil~=v and v:GetDuration()<finale.QUARTER_NOTE and not finenv.Region():IsEntryPosWithin(v)then v:SetBeamBeat(true)end end end end;if do_unbeam==nil then do_unbeam=finenv.QueryInvokedModifierKeys(finale.CMDMODKEY_ALT)or finenv.QueryInvokedModifierKeys(finale.CMDMODKEY_SHIFT)end;beam_selected_region()end)c("library.note_entry",function(require,n,c,d)local w={}function w.finale_version(x,y,z)local A=bit32.bor(bit32.lshift(math.floor(x),24),bit32.lshift(math.floor(y),20))if z then A=bit32.bor(A,math.floor(z))end;return A end;function w.group_overlaps_region(B,C)if C:IsFullDocumentSpan()then return true end;local D=false;local E=finale.FCSystemStaves()E:LoadAllForRegion(C)for F in each(E)do if B:ContainsStaff(F:GetStaff())then D=true;break end end;if not D then return false end;if B.StartMeasure>C.EndMeasure or B.EndMeasure<C.StartMeasure then return false end;return true end;function w.group_is_contained_in_region(B,C)if not C:IsStaffIncluded(B.StartStaff)then return false end;if not C:IsStaffIncluded(B.EndStaff)then return false end;return true end;function w.staff_group_is_multistaff_instrument(B)local G=finale.FCMultiStaffInstruments()G:LoadAll()for H in each(G)do if H:ContainsStaff(B.StartStaff)and H.GroupID==B:GetItemID()then return true end end;return false end;function w.get_selected_region_or_whole_doc()local I=finenv.Region()if I:IsEmpty()then I:SetFullDocument()end;return I end;function w.get_first_cell_on_or_after_page(J)local K=J;local L=finale.FCPage()local M=false;while L:Load(K)do if L:GetFirstSystem()>0 then M=true;break end;K=K+1 end;if M then local N=finale.FCStaffSystem()N:Load(L:GetFirstSystem())return finale.FCCell(N.FirstMeasure,N.TopStaff)end;local O=finale.FCMusicRegion()O:SetFullDocument()return finale.FCCell(O.EndMeasure,O.EndStaff)end;function w.get_top_left_visible_cell()if not finenv.UI():IsPageView()then local P=finale.FCMusicRegion()P:SetFullDocument()return finale.FCCell(finenv.UI():GetCurrentMeasure(),P.StartStaff)end;return w.get_first_cell_on_or_after_page(finenv.UI():GetCurrentPage())end;function w.get_top_left_selected_or_visible_cell()local I=finenv.Region()if not I:IsEmpty()then return finale.FCCell(I.StartMeasure,I.StartStaff)end;return w.get_top_left_visible_cell()end;function w.is_default_measure_number_visible_on_cell(Q,R,S,T)local U=finale.FCCurrentStaffSpec()if not U:LoadForCell(R,0)then return false end;if Q:GetShowOnTopStaff()and R.Staff==S.TopStaff then return true end;if Q:GetShowOnBottomStaff()and R.Staff==S:CalcBottomStaff()then return true end;if U.ShowMeasureNumbers then return not Q:GetExcludeOtherStaves(T)end;return false end;function w.is_default_number_visible_and_left_aligned(Q,R,V,T,W)if Q.UseScoreInfoForParts then T=false end;if W and Q:GetShowOnMultiMeasureRests(T)then if finale.MNALIGN_LEFT~=Q:GetMultiMeasureAlignment(T)then return false end elseif R.Measure==V.FirstMeasure then if not Q:GetShowOnSystemStart()then return false end;if finale.MNALIGN_LEFT~=Q:GetStartAlignment(T)then return false end else if not Q:GetShowMultiples(T)then return false end;if finale.MNALIGN_LEFT~=Q:GetMultipleAlignment(T)then return false end end;return w.is_default_measure_number_visible_on_cell(Q,R,V,T)end;function w.update_layout(X,Y)X=X or 1;Y=Y or false;local Z=finale.FCPage()if Z:Load(X)then Z:UpdateLayout(Y)end end;function w.get_current_part()local _=finale.FCParts()_:LoadAll()return _:GetCurrent()end;function w.get_page_format_prefs()local a0=w.get_current_part()local a1=finale.FCPageFormatPrefs()local a2=false;if a0:IsScore()then a2=a1:LoadScore()else a2=a1:LoadParts()end;return a1,a2 end;function w.get_smufl_metadata_file(a3)if not a3 then a3=finale.FCFontInfo()a3:LoadFontPrefs(finale.FONTPREF_MUSIC)end;local a4=function(a5,a3)local a6=a5 .."/SMuFL/Fonts/"..a3.Name.."/"..a3.Name..".json"return io.open(a6,"r")end;local a7=""if finenv.UI():IsOnWindows()then a7=os.getenv("LOCALAPPDATA")else a7=os.getenv("HOME").."/Library/Application Support"end;local a8=a4(a7,a3)if nil~=a8 then return a8 end;local a9="/Library/Application Support"if finenv.UI():IsOnWindows()then a9=os.getenv("COMMONPROGRAMFILES")end;return a4(a9,a3)end;function w.is_font_smufl_font(a3)if not a3 then a3=finale.FCFontInfo()a3:LoadFontPrefs(finale.FONTPREF_MUSIC)end;if finenv.RawFinaleVersion>=w.finale_version(27,1)then if nil~=a3.IsSMuFLFont then return a3.IsSMuFLFont end end;local aa=w.get_smufl_metadata_file(a3)if nil~=aa then io.close(aa)return true end;return false end;function w.simple_input(ab,ac)local ad=finale.FCString()ad.LuaString=""local ae=finale.FCString()local af=160;function format_ctrl(ag,ah,ai,aj)ag:SetHeight(ah)ag:SetWidth(ai)ae.LuaString=aj;ag:SetText(ae)end;title_width=string.len(ab)*6+54;if title_width>af then af=title_width end;text_width=string.len(ac)*6;if text_width>af then af=text_width end;ae.LuaString=ab;local ak=finale.FCCustomLuaWindow()ak:SetTitle(ae)local al=ak:CreateStatic(0,0)format_ctrl(al,16,af,ac)local am=ak:CreateEdit(0,20)format_ctrl(am,20,af,"")ak:CreateOkButton()ak:CreateCancelButton()function callback(ag)end;ak:RegisterHandleCommand(callback)if ak:ExecuteModal(nil)==finale.EXECMODAL_OK then ad.LuaString=am:GetText(ad)return ad.LuaString end end;function w.is_finale_object(an)return an and type(an)=="userdata"and an.ClassName and an.GetClassID and true or false end;function w.system_indent_set_to_prefs(V,a1)a1=a1 or w.get_page_format_prefs()local ao=finale.FCMeasure()local ap=V.FirstMeasure==1;if not ap and ao:Load(V.FirstMeasure)then if ao.ShowFullNames then ap=true end end;if ap and a1.UseFirstSystemMargins then V.LeftMargin=a1.FirstSystemLeft else V.LeftMargin=a1.SystemLeft end;return V:Save()end;return w end)return a("__root")