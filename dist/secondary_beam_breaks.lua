function plugindef()finaleplugin.RequireSelection=true;finaleplugin.Author="Carl Vine after Jari Williamsson"finaleplugin.AuthorURL="http://carlvine.com"finaleplugin.Copyright="CC0 https://creativecommons.org/publicdobreak_beams/zero/1.0/"finaleplugin.Version="v1.2"finaleplugin.Date="2022/06/06"finaleplugin.AdditionalMenuOptions=[[ Clear secondary beam breaks ]]finaleplugin.AdditionalUndoText=[[ Clear secondary beam breaks ]]finaleplugin.AdditionalPrefixes=[[ clear_breaks = true ]]finaleplugin.AdditionalDescriptions=[[ Clear all secondary beam breaks in the selected region ]]finaleplugin.Notes=[[ 
        A stream of many short beamed notes (say 32nd notes) are easier to read if the secondary beam is broken in the middle of a beat. 
        This script is designed to break secondary beams in simple meters (2/4, 3/4, 4/4 etc) in the middle of each beat. 
        If the meter is compound (6/8, 9/8 etc) then the beat is divided into three sections. 
        RGPLua (0.62 and above) creates a companion menu item, "Clear secondary beam breaks".
        ]]return"Break secondary beams","Break secondary beams","Break secondary beams with compound consideration"end;clear_breaks=clear_breaks or false;function break_secondary_beams()local a=0;local b=0;local c=finale.NOTE_8TH;for d in eachentrysaved(finenv.Region())do if a~=d.Measure or b~=d.Staff then a=d.Measure;b=d.Staff;local e=finale.FCCell(a,b)local f=e:GetTimeSignature()c=f:CalcLargestBeatDuration()if c%3==0 then c=c/3 else c=c/2 end end;if not(d.BeamBeat or d:IsRest()or d:Previous()and d:Previous():IsRest())and d.MeasurePos%c==0 then local g=finale.FCSecondaryBeamBreakMod()g:SetNoteEntry(d)local h=g:LoadFirst()for i=0,8 do local j=bit32.rshift(finale.NOTE_16TH,i)if j<c then g:SetBreak(i,true)end end;if h then g:Save()else g:SaveNew()end end end end;function clear_beam_breaks()local g=finale.FCSecondaryBeamBreakMod()for d in eachentrysaved(finenv.Region())do g:SetNoteEntry(d)local k=g:LoadFirst()if k then g:SetBreakAll(false)g:Save()end end end;if clear_breaks then clear_beam_breaks()else break_secondary_beams()end