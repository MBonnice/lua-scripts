function plugindef()finaleplugin.RequireSelection=true;finaleplugin.Author="Carl Vine"finaleplugin.AuthorURL="http://carlvine.com"finaleplugin.Copyright="CC0 https://creativecommons.org/publicdomain/zero/1.0/"finaleplugin.Version="v1.3"finaleplugin.Date="2022/06/13"finaleplugin.CategoryTags="MIDI"finaleplugin.Notes=[[
    Change the playback START and STOP times for every note in the selected area on one or all layers. 
    To affect playback "Note Durations" must be enabled under "Playback/Record Options".
]]return"MIDI Duration","MIDI Duration","Change MIDI note start and stop times"end;function show_error(a,b)local c={bad_offset="Offset times must be reasonable,\nsay -9999 to 9999\n(not ",bad_layer_number="Layer number must be an\ninteger between zero and 4\n(not "}finenv.UI():AlertNeutral("script: "..plugindef(),c[a]..b..")")end;function get_user_choices()local d,e=10,25;local f=finenv.UI():IsOnMac()and 3 or 0;local g=120;local h=finale.FCCustomWindow()local i=finale.FCString()i.LuaString=plugindef()h:SetTitle(i)local j={}local k={{"Start time:",start_offset or 0},{"Stop time:",stop_offset or 0},{"Layer# 1-4 (0 = all):",layer_number or 0}}for l,m in ipairs(k)do i.LuaString=m[1]local n=h:CreateStatic(0,d)n:SetText(i)n:SetWidth(g)j[l]=h:CreateEdit(g,d-f)j[l]:SetInteger(m[2])d=d+e end;h:CreateOkButton()h:CreateCancelButton()return h:ExecuteModal(nil)==finale.EXECMODAL_OK,j[1]:GetInteger(),j[2]:GetInteger(),j[3]:GetInteger()end;function change_midi_duration()local o=false;is_ok,start_offset,stop_offset,layer_number=get_user_choices()if not is_ok then return end;if start_offset<-9999 or start_offset>9999 or stop_offset<-9999 or stop_offset>9999 then show_error("bad_offset",start_offset.." / "..stop_offset)return end;if layer_number<0 or layer_number>4 then show_error("bad_layer_number",layer_number)return end;if finenv.RetainLuaState~=nil then finenv.RetainLuaState=true end;for p in eachentrysaved(finenv.Region(),layer_number)do local q=finale.FCPerformanceMod()if p:IsNote()then q:SetNoteEntry(p)for r in each(p)do q:LoadAt(r)if not r.TieBackwards then q.StartOffset=start_offset end;if not r.Tie then q.EndOffset=stop_offset end;q:SaveAt(r)end end end end;change_midi_duration()