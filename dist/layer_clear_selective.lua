local a,b,c,d=(function(e)local f={[{}]=true}local g;local h={}local require;local i={}g=function(j,k)if not h[j]then h[j]=k end end;require=function(j)local l=i[j]if l then if l==f then return nil end else if not h[j]then if not e then local m=type(j)=='string'and'\"'..j..'\"'or tostring(j)error('Tried to require '..m..', but no such module has been registered')else return e(j)end end;i[j]=f;l=h[j](require,i,g,h)i[j]=l end;return l end;return require,i,g,h end)(require)c("__root",function(require,n,c,d)function plugindef()finaleplugin.RequireSelection=true;finaleplugin.Author="Carl Vine"finaleplugin.AuthorURL="http://carlvine.com/?cv=lua"finaleplugin.Copyright="CC0 https://creativecommons.org/publicdomain/zero/1.0/"finaleplugin.Version="v1.04"finaleplugin.Date="2022/06/15"finaleplugin.CategoryTags="Note"finaleplugin.Notes=[[
        Clear all music from the chosen layer in the surrently selected region. 
        (Note that all of a measure's layer will be cleared even if it is partially selected).
    ]]return"Clear layer selective","Clear layer selective","Clear the chosen layer"end;local o=require("library.layer")function get_user_choice()local p=10;local q=110;local r=finenv.UI():IsOnMac()and 3 or 0;local s=finale.FCCustomWindow()local t=finale.FCString()t.LuaString=plugindef()s:SetTitle(t)t.LuaString="Clear Layer (1-4):"local u=s:CreateStatic(0,p)u:SetText(t)u:SetWidth(q)local v=s:CreateEdit(q,p-r)v:SetInteger(clear_layer_number or 1)v:SetWidth(50)s:CreateOkButton()s:CreateCancelButton()return s:ExecuteModal(nil)==finale.EXECMODAL_OK,v:GetInteger()end;function clear_layers()local w=false;w,clear_layer_number=get_user_choice()if not w then return end;if clear_layer_number<1 or clear_layer_number>4 then finenv.UI():AlertNeutral("script: "..plugindef(),"The layer number must be\nan integer between 1 and 4\n(not "..clear_layer_number..")")return end;if finenv.RetainLuaState~=nil then finenv.RetainLuaState=true end;o.clear(finenv.Region(),clear_layer_number)end;clear_layers()end)c("library.layer",function(require,n,c,d)local x={}function x.finale_version(y,z,A)local B=bit32.bor(bit32.lshift(math.floor(y),24),bit32.lshift(math.floor(z),20))if A then B=bit32.bor(B,math.floor(A))end;return B end;function x.group_overlaps_region(C,D)if D:IsFullDocumentSpan()then return true end;local E=false;local F=finale.FCSystemStaves()F:LoadAllForRegion(D)for G in each(F)do if C:ContainsStaff(G:GetStaff())then E=true;break end end;if not E then return false end;if C.StartMeasure>D.EndMeasure or C.EndMeasure<D.StartMeasure then return false end;return true end;function x.group_is_contained_in_region(C,D)if not D:IsStaffIncluded(C.StartStaff)then return false end;if not D:IsStaffIncluded(C.EndStaff)then return false end;return true end;function x.staff_group_is_multistaff_instrument(C)local H=finale.FCMultiStaffInstruments()H:LoadAll()for I in each(H)do if I:ContainsStaff(C.StartStaff)and I.GroupID==C:GetItemID()then return true end end;return false end;function x.get_selected_region_or_whole_doc()local J=finenv.Region()if J:IsEmpty()then J:SetFullDocument()end;return J end;function x.get_first_cell_on_or_after_page(K)local L=K;local M=finale.FCPage()local N=false;while M:Load(L)do if M:GetFirstSystem()>0 then N=true;break end;L=L+1 end;if N then local O=finale.FCStaffSystem()O:Load(M:GetFirstSystem())return finale.FCCell(O.FirstMeasure,O.TopStaff)end;local P=finale.FCMusicRegion()P:SetFullDocument()return finale.FCCell(P.EndMeasure,P.EndStaff)end;function x.get_top_left_visible_cell()if not finenv.UI():IsPageView()then local Q=finale.FCMusicRegion()Q:SetFullDocument()return finale.FCCell(finenv.UI():GetCurrentMeasure(),Q.StartStaff)end;return x.get_first_cell_on_or_after_page(finenv.UI():GetCurrentPage())end;function x.get_top_left_selected_or_visible_cell()local J=finenv.Region()if not J:IsEmpty()then return finale.FCCell(J.StartMeasure,J.StartStaff)end;return x.get_top_left_visible_cell()end;function x.is_default_measure_number_visible_on_cell(R,S,T,U)local V=finale.FCCurrentStaffSpec()if not V:LoadForCell(S,0)then return false end;if R:GetShowOnTopStaff()and S.Staff==T.TopStaff then return true end;if R:GetShowOnBottomStaff()and S.Staff==T:CalcBottomStaff()then return true end;if V.ShowMeasureNumbers then return not R:GetExcludeOtherStaves(U)end;return false end;function x.is_default_number_visible_and_left_aligned(R,S,W,U,X)if R.UseScoreInfoForParts then U=false end;if X and R:GetShowOnMultiMeasureRests(U)then if finale.MNALIGN_LEFT~=R:GetMultiMeasureAlignment(U)then return false end elseif S.Measure==W.FirstMeasure then if not R:GetShowOnSystemStart()then return false end;if finale.MNALIGN_LEFT~=R:GetStartAlignment(U)then return false end else if not R:GetShowMultiples(U)then return false end;if finale.MNALIGN_LEFT~=R:GetMultipleAlignment(U)then return false end end;return x.is_default_measure_number_visible_on_cell(R,S,W,U)end;function x.update_layout(Y,Z)Y=Y or 1;Z=Z or false;local _=finale.FCPage()if _:Load(Y)then _:UpdateLayout(Z)end end;function x.get_current_part()local a0=finale.FCParts()a0:LoadAll()return a0:GetCurrent()end;function x.get_page_format_prefs()local a1=x.get_current_part()local a2=finale.FCPageFormatPrefs()local a3=false;if a1:IsScore()then a3=a2:LoadScore()else a3=a2:LoadParts()end;return a2,a3 end;local a4=function(a5)local a6=finenv.UI():IsOnWindows()local a7=function(a8,a9)if finenv.UI():IsOnWindows()then return a8 and os.getenv(a8)or""else return a9 and os.getenv(a9)or""end end;local aa=a5 and a7("LOCALAPPDATA","HOME")or a7("COMMONPROGRAMFILES")if not a6 then aa=aa.."/Library/Application Support"end;aa=aa.."/SMuFL/Fonts/"return aa end;function x.get_smufl_font_list()local ab={}local ac=function(a5)local aa=a4(a5)local ad=function()if finenv.UI():IsOnWindows()then return io.popen('dir "'..aa..'" /b /ad')else return io.popen('ls "'..aa..'"')end end;local ae=function(af)local ag=finale.FCString()ag.LuaString=af;return finenv.UI():IsFontAvailable(ag)end;for af in ad():lines()do if not af:find("%.")then af=af:gsub(" Bold","")af=af:gsub(" Italic","")local ag=finale.FCString()ag.LuaString=af;if ab[af]or ae(af)then ab[af]=a5 and"user"or"system"end end end end;ac(true)ac(false)return ab end;function x.get_smufl_metadata_file(ah)if not ah then ah=finale.FCFontInfo()ah:LoadFontPrefs(finale.FONTPREF_MUSIC)end;local ai=function(aj,ah)local ak=aj..ah.Name.."/"..ah.Name..".json"return io.open(ak,"r")end;local al=ai(a4(true),ah)if al then return al end;return ai(a4(false),ah)end;function x.is_font_smufl_font(ah)if not ah then ah=finale.FCFontInfo()ah:LoadFontPrefs(finale.FONTPREF_MUSIC)end;if finenv.RawFinaleVersion>=x.finale_version(27,1)then if nil~=ah.IsSMuFLFont then return ah.IsSMuFLFont end end;local am=x.get_smufl_metadata_file(ah)if nil~=am then io.close(am)return true end;return false end;function x.simple_input(an,ao)local ap=finale.FCString()ap.LuaString=""local t=finale.FCString()local aq=160;function format_ctrl(ar,as,at,au)ar:SetHeight(as)ar:SetWidth(at)t.LuaString=au;ar:SetText(t)end;title_width=string.len(an)*6+54;if title_width>aq then aq=title_width end;text_width=string.len(ao)*6;if text_width>aq then aq=text_width end;t.LuaString=an;local s=finale.FCCustomLuaWindow()s:SetTitle(t)local av=s:CreateStatic(0,0)format_ctrl(av,16,aq,ao)local aw=s:CreateEdit(0,20)format_ctrl(aw,20,aq,"")s:CreateOkButton()s:CreateCancelButton()function callback(ar)end;s:RegisterHandleCommand(callback)if s:ExecuteModal(nil)==finale.EXECMODAL_OK then ap.LuaString=aw:GetText(ap)return ap.LuaString end end;function x.is_finale_object(ax)return ax and type(ax)=="userdata"and ax.ClassName and ax.GetClassID and true or false end;function x.system_indent_set_to_prefs(W,a2)a2=a2 or x.get_page_format_prefs()local ay=finale.FCMeasure()local az=W.FirstMeasure==1;if not az and ay:Load(W.FirstMeasure)then if ay.ShowFullNames then az=true end end;if az and a2.UseFirstSystemMargins then W.LeftMargin=a2.FirstSystemLeft else W.LeftMargin=a2.SystemLeft end;return W:Save()end;function x.calc_script_name(aA)local aB=finale.FCString()if finenv.RunningLuaFilePath then aB.LuaString=finenv.RunningLuaFilePath()else aB:SetRunningLuaFilePath()end;local aC=finale.FCString()aB:SplitToPathAndFile(nil,aC)local B=aC.LuaString;if not aA then B=B:match("(.+)%..+")if not B or B==""then B=aC.LuaString end end;return B end;return x end)return a("__root")