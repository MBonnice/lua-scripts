local a,b,c,d=(function(e)local f={[{}]=true}local g;local h={}local require;local i={}g=function(j,k)if not h[j]then h[j]=k end end;require=function(j)local l=i[j]if l then if l==f then return nil end else if not h[j]then if not e then local m=type(j)=='string'and'\"'..j..'\"'or tostring(j)error('Tried to require '..m..', but no such module has been registered')else return e(j)end end;i[j]=f;l=h[j](require,i,g,h)i[j]=l end;return l end;return require,i,g,h end)(require)c("__root",function(require,n,c,d)function plugindef()finaleplugin.RequireSelection=true;finaleplugin.Author="Robert Patterson"finaleplugin.Copyright="CC0 https://creativecommons.org/publicdomain/zero/1.0/"finaleplugin.Version="1.0"finaleplugin.Date="December 26, 2021"finaleplugin.CategoryTags="Articulation"finaleplugin.MinJWLuaVersion=0.59;finaleplugin.Notes=[[
        How to use this script:

        1. Manually apply rolled-chord articulations to the chords that need them (without worrying about how they look).
        2. Select the region you want to change.
        3. Run the script.

        The script searches for any articulations with the "Copy Main Symbol Vertically" option checked.
        It automatically positions them to the left of any accidentals and changes their length so that they align
        with the top and bottom of the chord with a slight extension. (Approximately 1/4 space on either end.
        It may be longer depending on the length of the character defined for the articulation.)

        If you are working with a keyboard or other multi-staff instrument, the script automatically extends the top
        articulation across any staff or staves below, provided the lower staves also have the same articulation mark.
        It then hides the lower mark(s). This behavior is limited to staves that are selected. To suppress this behavior
        and restrict positioning to single staves, hold down Shift, Option (macOS), or Alt (Windows) key when invoking
        the script.

        This script requires RGP Lua 0.59 or later.
    ]]return"Autoposition Rolled Chord Articulations","Autoposition Rolled Chord Articulations",'Automatically positions rolled chords and other articulations with "Copy Main Symbol Vertically" set.'end;local o=require("library.note_entry")local p=require("library.articulation")local q={extend_across_staves=true,vertical_padding=6,horizontal_padding=18}if finenv.QueryInvokedModifierKeys(finale.CMDMODKEY_ALT)or finenv.QueryInvokedModifierKeys(finale.CMDMODKEY_SHIFT)then q.extend_across_staves=false end;function calc_top_bot_page_pos(r,s)local t=false;local u=-math.huge;local v=math.huge;local w=math.huge;for x in eachentry(r)do if not x:IsRest()then local y=x:CreateArticulations()local z=false;for A in each(y)do if A.ID==s then z=true;break end end;if z then local B=finale.FCEntryMetrics()if B:Load(x)then t=true;local C=o.get_top_note_position(x,B)if C>u then u=C end;local D=o.get_bottom_note_position(x,B)if D<v then v=D end;if B.FirstAccidentalPosition<w then w=B.FirstAccidentalPosition end;B:FreeMetrics()end end end end;return t,u,v,w end;function articulation_autoposition_rolled_chords()for x in eachentry(finenv.Region())do local y=x:CreateArticulations()for A in each(y)do if A.Visible then local E=A:CreateArticulationDef()if E.CopyMainSymbol and not E.CopyMainSymbolHorizontally then local F=false;local r=o.get_music_region(x)if q.extend_across_staves then if r.StartStaff~=finenv.Region().StartStaff then A.Visible=false;F=true else r.EndStaff=finenv.Region().EndStaff end end;local G=finale.FCPoint(0,0)local H=finale.FCCellMetrics()if A.Visible and A:CalcMetricPos(G)and H:LoadAtEntry(x)then local t,u,I,w=calc_top_bot_page_pos(r,A.ID)local D=o.get_bottom_note_position(x)staff_scale=H.StaffScaling/10000;u=u/staff_scale;I=I/staff_scale;w=w/staff_scale;D=D/staff_scale;local J,K=p.calc_main_character_dimensions(E)local L=K/2;local M=w-G.X;local N=u-G.Y;A.HorizontalPos=A.HorizontalPos+math.floor(M-J-q.horizontal_padding+0.5)A.VerticalPos=A.VerticalPos+math.floor(N-K+2*q.vertical_padding+0.5)A.VerticalCopyToPos=math.floor(I-D-q.vertical_padding-L+0.5)F=true end;if F then A:Save()end end end end end end;articulation_autoposition_rolled_chords()end)c("library.articulation",function(require,n,c,d)local O={}function O.finale_version(P,Q,R)local S=bit32.bor(bit32.lshift(math.floor(P),24),bit32.lshift(math.floor(Q),20))if R then S=bit32.bor(S,math.floor(R))end;return S end;function O.group_overlaps_region(T,U)if U:IsFullDocumentSpan()then return true end;local V=false;local W=finale.FCSystemStaves()W:LoadAllForRegion(U)for X in each(W)do if T:ContainsStaff(X:GetStaff())then V=true;break end end;if not V then return false end;if T.StartMeasure>U.EndMeasure or T.EndMeasure<U.StartMeasure then return false end;return true end;function O.group_is_contained_in_region(T,U)if not U:IsStaffIncluded(T.StartStaff)then return false end;if not U:IsStaffIncluded(T.EndStaff)then return false end;return true end;function O.staff_group_is_multistaff_instrument(T)local Y=finale.FCMultiStaffInstruments()Y:LoadAll()for Z in each(Y)do if Z:ContainsStaff(T.StartStaff)and Z.GroupID==T:GetItemID()then return true end end;return false end;function O.get_selected_region_or_whole_doc()local _=finenv.Region()if _:IsEmpty()then _:SetFullDocument()end;return _ end;function O.get_first_cell_on_or_after_page(a0)local a1=a0;local a2=finale.FCPage()local z=false;while a2:Load(a1)do if a2:GetFirstSystem()>0 then z=true;break end;a1=a1+1 end;if z then local a3=finale.FCStaffSystem()a3:Load(a2:GetFirstSystem())return finale.FCCell(a3.FirstMeasure,a3.TopStaff)end;local a4=finale.FCMusicRegion()a4:SetFullDocument()return finale.FCCell(a4.EndMeasure,a4.EndStaff)end;function O.get_top_left_visible_cell()if not finenv.UI():IsPageView()then local a5=finale.FCMusicRegion()a5:SetFullDocument()return finale.FCCell(finenv.UI():GetCurrentMeasure(),a5.StartStaff)end;return O.get_first_cell_on_or_after_page(finenv.UI():GetCurrentPage())end;function O.get_top_left_selected_or_visible_cell()local _=finenv.Region()if not _:IsEmpty()then return finale.FCCell(_.StartMeasure,_.StartStaff)end;return O.get_top_left_visible_cell()end;function O.is_default_measure_number_visible_on_cell(a6,a7,a8,a9)local aa=finale.FCCurrentStaffSpec()if not aa:LoadForCell(a7,0)then return false end;if a6:GetShowOnTopStaff()and a7.Staff==a8.TopStaff then return true end;if a6:GetShowOnBottomStaff()and a7.Staff==a8:CalcBottomStaff()then return true end;if aa.ShowMeasureNumbers then return not a6:GetExcludeOtherStaves(a9)end;return false end;function O.is_default_number_visible_and_left_aligned(a6,a7,ab,a9,ac)if a6.UseScoreInfoForParts then a9=false end;if ac and a6:GetShowOnMultiMeasureRests(a9)then if finale.MNALIGN_LEFT~=a6:GetMultiMeasureAlignment(a9)then return false end elseif a7.Measure==ab.FirstMeasure then if not a6:GetShowOnSystemStart()then return false end;if finale.MNALIGN_LEFT~=a6:GetStartAlignment(a9)then return false end else if not a6:GetShowMultiples(a9)then return false end;if finale.MNALIGN_LEFT~=a6:GetMultipleAlignment(a9)then return false end end;return O.is_default_measure_number_visible_on_cell(a6,a7,ab,a9)end;function O.update_layout(ad,ae)ad=ad or 1;ae=ae or false;local af=finale.FCPage()if af:Load(ad)then af:UpdateLayout(ae)end end;function O.get_current_part()local ag=finale.FCParts()ag:LoadAll()return ag:GetCurrent()end;function O.get_page_format_prefs()local ah=O.get_current_part()local ai=finale.FCPageFormatPrefs()local t=false;if ah:IsScore()then t=ai:LoadScore()else t=ai:LoadParts()end;return ai,t end;local aj=function(ak)local al=finenv.UI():IsOnWindows()local am=function(an,ao)if finenv.UI():IsOnWindows()then return an and os.getenv(an)or""else return ao and os.getenv(ao)or""end end;local ap=ak and am("LOCALAPPDATA","HOME")or am("COMMONPROGRAMFILES")if not al then ap=ap.."/Library/Application Support"end;ap=ap.."/SMuFL/Fonts/"return ap end;function O.get_smufl_font_list()local aq={}local ar=function(ak)local ap=aj(ak)local as=function()if finenv.UI():IsOnWindows()then return io.popen('dir "'..ap..'" /b /ad')else return io.popen('ls "'..ap..'"')end end;local at=function(au)local av=finale.FCString()av.LuaString=au;return finenv.UI():IsFontAvailable(av)end;for au in as():lines()do if not au:find("%.")then au=au:gsub(" Bold","")au=au:gsub(" Italic","")local av=finale.FCString()av.LuaString=au;if aq[au]or at(au)then aq[au]=ak and"user"or"system"end end end end;ar(true)ar(false)return aq end;function O.get_smufl_metadata_file(aw)if not aw then aw=finale.FCFontInfo()aw:LoadFontPrefs(finale.FONTPREF_MUSIC)end;local ax=function(ay,aw)local az=ay..aw.Name.."/"..aw.Name..".json"return io.open(az,"r")end;local aA=ax(aj(true),aw)if aA then return aA end;return ax(aj(false),aw)end;function O.is_font_smufl_font(aw)if not aw then aw=finale.FCFontInfo()aw:LoadFontPrefs(finale.FONTPREF_MUSIC)end;if finenv.RawFinaleVersion>=O.finale_version(27,1)then if nil~=aw.IsSMuFLFont then return aw.IsSMuFLFont end end;local aB=O.get_smufl_metadata_file(aw)if nil~=aB then io.close(aB)return true end;return false end;function O.simple_input(aC,aD)local aE=finale.FCString()aE.LuaString=""local aF=finale.FCString()local aG=160;function format_ctrl(aH,aI,aJ,aK)aH:SetHeight(aI)aH:SetWidth(aJ)aF.LuaString=aK;aH:SetText(aF)end;title_width=string.len(aC)*6+54;if title_width>aG then aG=title_width end;text_width=string.len(aD)*6;if text_width>aG then aG=text_width end;aF.LuaString=aC;local aL=finale.FCCustomLuaWindow()aL:SetTitle(aF)local aM=aL:CreateStatic(0,0)format_ctrl(aM,16,aG,aD)local aN=aL:CreateEdit(0,20)format_ctrl(aN,20,aG,"")aL:CreateOkButton()aL:CreateCancelButton()function callback(aH)end;aL:RegisterHandleCommand(callback)if aL:ExecuteModal(nil)==finale.EXECMODAL_OK then aE.LuaString=aN:GetText(aE)return aE.LuaString end end;function O.is_finale_object(aO)return aO and type(aO)=="userdata"and aO.ClassName and aO.GetClassID and true or false end;function O.system_indent_set_to_prefs(ab,ai)ai=ai or O.get_page_format_prefs()local aP=finale.FCMeasure()local aQ=ab.FirstMeasure==1;if not aQ and aP:Load(ab.FirstMeasure)then if aP.ShowFullNames then aQ=true end end;if aQ and ai.UseFirstSystemMargins then ab.LeftMargin=ai.FirstSystemLeft else ab.LeftMargin=ai.SystemLeft end;return ab:Save()end;function O.calc_script_name(aR)local aS=finale.FCString()if finenv.RunningLuaFilePath then aS.LuaString=finenv.RunningLuaFilePath()else aS:SetRunningLuaFilePath()end;local aT=finale.FCString()aS:SplitToPathAndFile(nil,aT)local S=aT.LuaString;if not aR then S=S:match("(.+)%..+")if not S or S==""then S=aT.LuaString end end;return S end;return O end)c("library.note_entry",function(require,n,c,d)local O={}function O.finale_version(P,Q,R)local S=bit32.bor(bit32.lshift(math.floor(P),24),bit32.lshift(math.floor(Q),20))if R then S=bit32.bor(S,math.floor(R))end;return S end;function O.group_overlaps_region(T,U)if U:IsFullDocumentSpan()then return true end;local V=false;local W=finale.FCSystemStaves()W:LoadAllForRegion(U)for X in each(W)do if T:ContainsStaff(X:GetStaff())then V=true;break end end;if not V then return false end;if T.StartMeasure>U.EndMeasure or T.EndMeasure<U.StartMeasure then return false end;return true end;function O.group_is_contained_in_region(T,U)if not U:IsStaffIncluded(T.StartStaff)then return false end;if not U:IsStaffIncluded(T.EndStaff)then return false end;return true end;function O.staff_group_is_multistaff_instrument(T)local Y=finale.FCMultiStaffInstruments()Y:LoadAll()for Z in each(Y)do if Z:ContainsStaff(T.StartStaff)and Z.GroupID==T:GetItemID()then return true end end;return false end;function O.get_selected_region_or_whole_doc()local _=finenv.Region()if _:IsEmpty()then _:SetFullDocument()end;return _ end;function O.get_first_cell_on_or_after_page(a0)local a1=a0;local a2=finale.FCPage()local z=false;while a2:Load(a1)do if a2:GetFirstSystem()>0 then z=true;break end;a1=a1+1 end;if z then local a3=finale.FCStaffSystem()a3:Load(a2:GetFirstSystem())return finale.FCCell(a3.FirstMeasure,a3.TopStaff)end;local a4=finale.FCMusicRegion()a4:SetFullDocument()return finale.FCCell(a4.EndMeasure,a4.EndStaff)end;function O.get_top_left_visible_cell()if not finenv.UI():IsPageView()then local a5=finale.FCMusicRegion()a5:SetFullDocument()return finale.FCCell(finenv.UI():GetCurrentMeasure(),a5.StartStaff)end;return O.get_first_cell_on_or_after_page(finenv.UI():GetCurrentPage())end;function O.get_top_left_selected_or_visible_cell()local _=finenv.Region()if not _:IsEmpty()then return finale.FCCell(_.StartMeasure,_.StartStaff)end;return O.get_top_left_visible_cell()end;function O.is_default_measure_number_visible_on_cell(a6,a7,a8,a9)local aa=finale.FCCurrentStaffSpec()if not aa:LoadForCell(a7,0)then return false end;if a6:GetShowOnTopStaff()and a7.Staff==a8.TopStaff then return true end;if a6:GetShowOnBottomStaff()and a7.Staff==a8:CalcBottomStaff()then return true end;if aa.ShowMeasureNumbers then return not a6:GetExcludeOtherStaves(a9)end;return false end;function O.is_default_number_visible_and_left_aligned(a6,a7,ab,a9,ac)if a6.UseScoreInfoForParts then a9=false end;if ac and a6:GetShowOnMultiMeasureRests(a9)then if finale.MNALIGN_LEFT~=a6:GetMultiMeasureAlignment(a9)then return false end elseif a7.Measure==ab.FirstMeasure then if not a6:GetShowOnSystemStart()then return false end;if finale.MNALIGN_LEFT~=a6:GetStartAlignment(a9)then return false end else if not a6:GetShowMultiples(a9)then return false end;if finale.MNALIGN_LEFT~=a6:GetMultipleAlignment(a9)then return false end end;return O.is_default_measure_number_visible_on_cell(a6,a7,ab,a9)end;function O.update_layout(ad,ae)ad=ad or 1;ae=ae or false;local af=finale.FCPage()if af:Load(ad)then af:UpdateLayout(ae)end end;function O.get_current_part()local ag=finale.FCParts()ag:LoadAll()return ag:GetCurrent()end;function O.get_page_format_prefs()local ah=O.get_current_part()local ai=finale.FCPageFormatPrefs()local t=false;if ah:IsScore()then t=ai:LoadScore()else t=ai:LoadParts()end;return ai,t end;local aj=function(ak)local al=finenv.UI():IsOnWindows()local am=function(an,ao)if finenv.UI():IsOnWindows()then return an and os.getenv(an)or""else return ao and os.getenv(ao)or""end end;local ap=ak and am("LOCALAPPDATA","HOME")or am("COMMONPROGRAMFILES")if not al then ap=ap.."/Library/Application Support"end;ap=ap.."/SMuFL/Fonts/"return ap end;function O.get_smufl_font_list()local aq={}local ar=function(ak)local ap=aj(ak)local as=function()if finenv.UI():IsOnWindows()then return io.popen('dir "'..ap..'" /b /ad')else return io.popen('ls "'..ap..'"')end end;local at=function(au)local av=finale.FCString()av.LuaString=au;return finenv.UI():IsFontAvailable(av)end;for au in as():lines()do if not au:find("%.")then au=au:gsub(" Bold","")au=au:gsub(" Italic","")local av=finale.FCString()av.LuaString=au;if aq[au]or at(au)then aq[au]=ak and"user"or"system"end end end end;ar(true)ar(false)return aq end;function O.get_smufl_metadata_file(aw)if not aw then aw=finale.FCFontInfo()aw:LoadFontPrefs(finale.FONTPREF_MUSIC)end;local ax=function(ay,aw)local az=ay..aw.Name.."/"..aw.Name..".json"return io.open(az,"r")end;local aA=ax(aj(true),aw)if aA then return aA end;return ax(aj(false),aw)end;function O.is_font_smufl_font(aw)if not aw then aw=finale.FCFontInfo()aw:LoadFontPrefs(finale.FONTPREF_MUSIC)end;if finenv.RawFinaleVersion>=O.finale_version(27,1)then if nil~=aw.IsSMuFLFont then return aw.IsSMuFLFont end end;local aB=O.get_smufl_metadata_file(aw)if nil~=aB then io.close(aB)return true end;return false end;function O.simple_input(aC,aD)local aE=finale.FCString()aE.LuaString=""local aF=finale.FCString()local aG=160;function format_ctrl(aH,aI,aJ,aK)aH:SetHeight(aI)aH:SetWidth(aJ)aF.LuaString=aK;aH:SetText(aF)end;title_width=string.len(aC)*6+54;if title_width>aG then aG=title_width end;text_width=string.len(aD)*6;if text_width>aG then aG=text_width end;aF.LuaString=aC;local aL=finale.FCCustomLuaWindow()aL:SetTitle(aF)local aM=aL:CreateStatic(0,0)format_ctrl(aM,16,aG,aD)local aN=aL:CreateEdit(0,20)format_ctrl(aN,20,aG,"")aL:CreateOkButton()aL:CreateCancelButton()function callback(aH)end;aL:RegisterHandleCommand(callback)if aL:ExecuteModal(nil)==finale.EXECMODAL_OK then aE.LuaString=aN:GetText(aE)return aE.LuaString end end;function O.is_finale_object(aO)return aO and type(aO)=="userdata"and aO.ClassName and aO.GetClassID and true or false end;function O.system_indent_set_to_prefs(ab,ai)ai=ai or O.get_page_format_prefs()local aP=finale.FCMeasure()local aQ=ab.FirstMeasure==1;if not aQ and aP:Load(ab.FirstMeasure)then if aP.ShowFullNames then aQ=true end end;if aQ and ai.UseFirstSystemMargins then ab.LeftMargin=ai.FirstSystemLeft else ab.LeftMargin=ai.SystemLeft end;return ab:Save()end;function O.calc_script_name(aR)local aS=finale.FCString()if finenv.RunningLuaFilePath then aS.LuaString=finenv.RunningLuaFilePath()else aS:SetRunningLuaFilePath()end;local aT=finale.FCString()aS:SplitToPathAndFile(nil,aT)local S=aT.LuaString;if not aR then S=S:match("(.+)%..+")if not S or S==""then S=aT.LuaString end end;return S end;return O end)return a("__root")